<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta name="generator"
          content="HTML Tidy for Windows (vers 14 February 2006), see www.w3.org" />
    <meta content="text/html; charset=us-ascii"
          http-equiv="content-type" />

    <title>Electric Commander Plugin for WebSphere</title>
    <link rel="stylesheet"
          href="../../plugins/EC-WebSphere/pluginhelp.css"
          type="text/css"
          media="screen" />
</head>

<body>
    <div class="help">
        <h1>WebSphere Application Server</h1>

        <p>Plugin Version 2.0.6.0</p>
        <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;"
            noshade="noshade" />
        <!-- The tool description should answer these kinds of
        questions: What is the tool itself is used for in the
        development process? Who would use this tool? What is the
        general use-case or problem that this tool solves? Look at
        the tool's documentation or website(s) to get their own
        descriptions. Look at Wikipedia or other outside websites.
        If there is a Hudson plugin, read their documentation for
        ideas, examples, etc. It's OK to copy word-for-word only if
        appropriate, such as FOSS - but not commercial software. -->

        <p>IBM WebSphere Application Server (WAS), a software
        application server, is the flagship product in IBM
        WebSphere brand. It provides the flexibility, efficiency,
        and intelligent management required by an agile, cost-effective
        business.</p>
		
		<p>For more information about WebSphere, go to the <a href="http://www-01.ibm.com/software/websphere/">WebSphere

        Home Page</a>.</p>

    <!--There was an h2 header here: WebSphere Links
        <p>
        
        h2 header: Electric Commander Integration to WebSphere -->
        <!-- The integration description should answer the questions:
        How deep does our integration go? Why should I care?
        What general functionality does the plugin include? What
        functionality does the plugin omit? -->

        <p>You use this plugin to interact with an IBM
        WebSphere Server. You can start and stop the server.  
		
        You can also manage applications within the server (start,
        deploy, undeploy, stop or custom task) using the provided
        WebSphere scripts in the <i>bin</i> directory under
        the installation home directory (wsadmin, startServer,
        stopServer). You can run Jython scripts that are 
        provided by the user or defined when a procedure is 
        created.</p>

    <h1>Supported Platforms</h1> 
        <p>The plugin was developed and tested against WebSphere Version 7.0.</p>

	<h1>Plugin Procedures</h1>
	   
        <p>IMPORTANT: For all the following parameter descriptions,
        the required parameters are in
        <span class='required'>bold italics</span>.</p>

        <div id="CreateConfiguration">
            <a name='CreateConfiguration'
                 id="CreateConfiguration"></a> 

            <h2>Plugin Configurations</h2>
            <!-- If the plugin has separate configurations then include
            this section, otherwise omit this whole section. We don't
            need to have a configuration section that just says "There
            is no configuration for this plugin." -->   
      <p>
        Plugin configurations are sets of parameters that apply
        across some or all of the plugin procedures. They 
		
		reduce repetition of common values, create
        predefined parameter sets for end users, and 
        securely store credentials where needed. Each configuration
        is given a unique name that is entered in designated
        parameters on procedures that use them.<br /><br />
        </p>
      <!-- For all parameters, the parameter name should be *exactly*
    the same as it appears in the Parameter Panel, and the first
    sentence(s) of the description should be the same as the tooltip (if
    there is one). After that, the parameter description can go into
    greater detail about the parameter including valid value ranges and
    examples. -->
	
            <h3>Creating Plugin Configurations</h3>  	
            <p>To create plugin configurations in ElectricCommander, 

        do these steps:</p>
		
		<ol>
		
		<li>Go to <b>Administration</b> > <b>Plugins</b> to open the Plugin Manager.</li>
		
		<li>Find the EC-WebSphere row.</li>
		
		<li>Click <b>Configure</b> to open the 
		
		WebSphere Configurations page.</li> 
		
		<li>Click <b>Create Configuration</b>.</li>

		<li>To enable Commander to communicate with your WebSphere Application Server, 
		
		enter the following information:<br /> </li>

            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>

                        <th>Description</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td class="required">Configuration
                        Name</td>

                        <td>The name of the configuration to
                        create.  </td>
                    </tr>

                    <tr>
                        <td class="required">WebSphere Host</td>

                        <td>The URL of the WebSphere Server.  </td>
                    </tr>

                    <tr>
                        <td>WebSphere Admin Port</td>

                        <td>The port for the WebSphere administrative console. This
                        port is used with the WebSphere URL. 
                        If it is not specified, ElectricCommander
                       uses 9043 as the default port. For example, you can specify  
                       <b>9070</b> as the port.</td>
                    </tr>

                    <tr>
                        <td>Login as</td>

                        <td><i>Username</i>: The user name used by 
                        ElectricCommander to communicate with the
                        WebSphere server.<br />
                         <i>Password</i>: The password for
                        the <i>Username</i>.<br />
                         <i>Retype Password</i>: Re-enter the
                        password.</td>
                    </tr>
                </tbody>
            </table><img src="../../plugins/EC-WebSphere/images/Config/parameters.png" />
			
			 </ol>
			 
			<p>The WebSphere Configurations page now shows the new configuration.</p>

            <img src="../../plugins/EC-WebSphere/images/CreateConfiguration/NewConfig.png" />	

        <h3>Editing Plugin Configurations</h3>  	

            <p>To edit plugin configurations in ElectricCommander, 

        do these steps:</p>
		
		<ol>
		
		<li>Go to <b>Administration</b> > <b>Plugins</b> to open the Plugin Manager.</li>
		
		<li>Find the EC-WebSphere row.</li>
		
		<li>Click <b>Configure</b> to open the 
		
		WebSphere Configurations page.</li> 
		
		<li>Find the configuration that you want to edit.</li>
		
		<li>Click <b>Edit</b>.</li>

		<li>Edit the parameters in the configuration.</li>
		
		<li>Click <b>OK</b> to save the modified configuration.</li>
		
        <img src="../../plugins/EC-WebSphere/images/CreateConfiguration/EditConfig.png" />	
 
        </ol>		
            </div>

        <div id="CheckApp">
            <a name="CheckApp"
                 id="CheckApp"></a> 

            <h2>CheckApp</h2>
            <p>This procedure checks if a web application is ready by using a
            Jython script.</p>
            <h3>CheckApp Parmeters</h3>
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>

                        <th>Description</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td class="required">Application Name</td>

                        <td>The name of the web application to 
                        check, such as <i>webapp</i>. </td>
                    </tr>

                    <tr>
                        <td class="required">Wsadmin Absolute
                        Path</td>

                        <td>The absolute path of the wsadmin tool that includes the
                        filename and extension. <br />
						
						Examples: <i>/path/to/wsadmin.sh</i> and <i>wsadmin.bat</i>. </td>
                    </tr>

                    <tr>
                        <td>Configuration Name</td>

                        <td>The name of the configuration to use. 
                        ElectricCommander gets the URL, port, and credentials 
                        from this configuration.</td>
                    </tr>
                </tbody>
            </table>
			
			<img src="../../plugins/EC-WebSphere/images/CheckApp/CheckAppParameters.png" />
        </div>

        <div id="CheckPageStatus">
            <a name="CheckPageStatus"
                 id="CheckPageStatus"></a> 

            <h2>CheckPageStatus</h2>

            <p>This procedure checks the status of the page with the specified URL.</p>
            <h3>CheckPageStatus Parameters</h3>
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>

                        <th>Description</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td>Credentials to be entered (also referred to as <i>credentialName</i> in the property view)</td>

                        <td>The credentials required to check the
                        status of the page. You must enter a <i>Username</i> and <i>Password</i>.</td>
                    </tr>

               
					<tr>
                        <td class="required">Target URL (also referred to as <i>targeturl</i> in the property view)</td>

                        <td>The URL of the page to check.
                        </td>
                    </tr>

                    <tr>
                        <td>Maximum Elapsed Time (also referred to as <i>maxelapsedtime</i> in the property view)</td>

                        <td>The maximum time in seconds
                        that the job tries to check into the
                        server. When the text box is blank, ElectricCommander interprets this as 
                        no wait time and checks the URL only one time.</td>
                    </tr>

                    <tr>
                        <td>Success Criteria (also referred to as <i>successcriteria</i> in the property view)</td>

                        <td>The expected result when the page  
                        is checked.</td>
                    </tr>
                </tbody>
            </table>
			
			<!--  <img src="../../plugins/EC-WebSphere/images/CheckPageStatus/parametersToEnterBlank.png" /> -->
			
			<h3>Checking the Status of a Page</h3>
			
			<p>To check the status of page at a specific URL, do the following steps:</p> 
            <ol>
            <li>Enter the following parameters:</li>
			
			<img src="../../plugins/EC-WebSphere/images/CheckPageStatus/parametersToEnter.png" />
			
			<li>Click <b>Run</b>. </li>
          
			</ol>
			
			<p>After the job runs, you can view the results, including the following job details, 

            which show that the criteria was reached:</p>
			
			
			
			<img src="../../plugins/EC-WebSphere/images/CheckPageStatus/checkPageStatus5.png" />

             



            <p>In the <b>CheckPageStatus</b> step, click the Log

            icon to see the diagnostic info. The output is similar

            to the following diagnostic

            report.</p><img src="../../plugins/EC-WebSphere/images/CheckPageStatus/checkPageStatus6.png" />
            </div>

        <div id="CheckServerStatus">
            <a name="CheckServerStatus"
                 id="CheckServerStatus"></a> 

            <h2>CheckServerStatus</h2>

            <p>This procedure checks the status of the specified server URL.</p>
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>

                        <th>Description</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td class="required">Configuration
                        Name</td>

                        <td>Name of the configuration to use. ElectricCommander gets the 
                        URL, port, and credentials from this configuration. </td>
                    </tr>

                    <tr>
                        <td>Maximum Elapsed Time</td>

                        <td>The maximum time in seconds
                        that the job tries to check into the
                        server. When the text box is blank, ElectricCommander interprets this as 
                        no wait time and checks the URL only one time.</td>
                    </tr>

                    <tr>
                        <td>Success Criteria</td>

                        <td>The expected result 
                        to be obtained when WebSphere server 
                        is checked.</td>
                    </tr>
                </tbody>
            </table>
			
			<img src="../../plugins/EC-WebSphere/images/CheckServerStatus/CSSparameters.png" />
        </div>

     
		<div id="CreateDatasource">

            <a name="CreateDatasource"

                 id="CreateDatasource"></a> 



            <h2>CreateDatasource</h2>



            <p>The procedure creates a datasource by using a Jython script.</p>

            <h3>CreateDatasource Parameters</h3>

            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>



                        <th>Description</th>

                    </tr>

                </thead>



                <tbody>

                    <tr>

                        <td class="required">Wsadmin Absolute Path</td>



                        <td> The absolute path of the wsadmin tool that includes the filename and extension. If the path in which wsadmin is stored is in the PATH environmental variable, the absolute path is omitted. Examples of paths are <i>/path/to/wsadmin.sh</i> and <i>wsadmin.bat</i>.</td>

                    </tr>

                    <tr>

                        <td class="required">Configuration Name</td>



                        <td>The name of the configuration to use. ElectricCommander gets the URL, port, and credentials from this configuration.</td>

                    </tr>

                    <tr>

                        <td class="required">JDBC Provider</td>



                        <td>The name of an existing JDBC Provider.</td>

                    </tr>

                    <tr>

                        <td class="required">Datasource Name</td>



                        <td>The name of the datasource that is unique in the WebSphere domain.</td>

                    </tr>

                    <tr>

                        <td>Datasource Description</td>



                        <td>A description of the datasource.</td>

                    </tr>

                    <tr>

                        <td class="required">JNDI Name</td>



                        <td>The JNDI path to which this datasource is bound. </td>

                    </tr>

                    <tr>

                        <td class="required">Statement Cache Size</td>



                        <td>The number of statements that can be cached per connection. The application server caches a statement after that statement is closed.</td>

                    </tr>

                    <tr>

                        <td class="required">Authentication Alias Name</td>



                        <td>The authentication data alias.</td>

                    </tr>

                    <tr>

                        <td class="required">Datasource Helper Class Name</td>



                        <td>The datasource helper class name.</td>

                    </tr>

                    <tr>

                        <td class="required">Connection Type</td>



                        <td>The type of connection to use when connecting to the application server that you want to administer. The valid options are <b>SOAP</b>, <b>RMI</b>, and <b>NONE</b>.</td>

                    </tr>

                </tbody>

            </table>



            <p>To create a datasource, do the following steps:</p>

            <ol>
			
			<li>Go to the CreateDataSource procedure.</li>
			
			<!--  <img src="../../plugins/EC-WebSphere/images/CreateDatasource/EC-WebSphereCreateDatasource1.png" /> -->
			
			<li>Enter the following parameters:</li>		
			<img src="../../plugins/EC-WebSphere/images/CreateDatasource/EC-WebSphereCreateDatasource2.png" />
				
			</ol>

      		           

			 <p>After the job runs, you can view the results, including the following job details, 

            which show that the datasource was successfully created:</p>
			
			<img src="../../plugins/EC-WebSphere/images/CreateDatasource/EC-WebSphereCreateDatasource3.png" />

             

            <p>In the <b>CreateDatasource</b> step, click the Log icon

            to see the diagnostic information. The output is similar to

            the following diagnostic

            report.</p><img src="../../plugins/EC-WebSphere/images/CreateDatasource/EC-WebSphereCreateDatasource4.png" />

        </div> 

		
		
		<div id="CreateJDBCProvider">

            <a name="CreateJDBCProvider"

                 id="CreateJDBCProvider"></a> 



            <h2>CreateJDBCProvider</h2>



            <p>This procedure creates a JDBC provider using a Jython script.</p>

            <h3>CreateJDBCProvider Parameters</h3>

            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>



                        <th>Description</th>

                    </tr>

                </thead>



                <tbody>

                    <tr>

                        <td class="required">Wsadmin Absolute Path</td>



                        <td>The absolute path of the wsadmin tool that includes filename and extension. If the path in which wsadmin is stored is in the PATH environmental variable, the absolute path is omitted. Examples are <i>/path/to/wsadmin.sh</i> and <i>wsadmin.bat</i>.</td>

                    </tr>

                    <tr>

                        <td class="required">Configuration Name</td>



                        <td>The name of the configuration to use. ElectricCommander gets the URL, port, and credentials from this configuration.</td>

                    </tr>

                    <tr>

                        <td class="required">JDBC Provider Name</td>



                        <td>The name of the JDBC Provider.</td>

                    </tr>

                    <tr>

                        <td>JDBC Provider Description</td>



                        <td>A description for the JDBC Provider.</td>

                    </tr>

                    <tr>

                        <td>Cell Scope</td>



                        <td>The parent object where the JDBC Provider will be created. This determines the visibility scope of the JDBC Provider. If the <i>Cell Scope</i> is specified and the node and server scopes are not specified, the scope will be the <i>Cell</i>. If the node is specified and the server is not, the scope will be the <i>Node</i>. If the server is specified and the node is not, the scope will be the <i>Server</i>. You must specify the <i>Cell</i>, <i>Node</i>, or <i>Server</i> scope must be provided, such as <i>wsaspluginNode01Cell</i>.</td>

                    </tr>

                    <tr>

                        <td>Node Scope</td>



                        <td>If the <i>Node Scope</i> is specified and the cell and server scopes are not, the scope will be the <i>node</i>. If the <i>Cell Scope</i> is provided and the server is not, the scope will be the <i>node</i>. If the server is provided and the cell is not, the scope will be the <i>server</i>. An example is <i>wsaspluginNode01</i>.</td>

                    </tr>

                    <tr>

                        <td>Server Scope</td>



                        <td>When the <i>Server Scope</i> is provided, the scope will always be <i>node</i> and the <i>server</i>, even if the <i>Node Scope</i> and the <i>Cell Scope</i> are not specified. An example is <i>server1</i>.</td>

                    </tr>

                    <tr>

                        <td class="required">Implementation Class Name</td>



                        <td>Java class name of the JDBC provider implementation.</td>

                    </tr>

                    <tr>

                        <td class="required">Driver Class Path</td>



                        <td>A path for the resource provider classes.</td>

                    </tr>

                    <tr>

                        <td class="required">Connection Type</td>



                        <td>The type of connection used to connect to the application server that you want to administer. The valid options are SOAP, RMI, and NONE.</td>

                    </tr>

                </tbody>

            </table>

            <h3>Creating a JDBC Providers</h3>
			
			<p>To create a JDBC provider, do these steps:</p>
			
			<ol>
			
			<li>Go to the CreateJDBCProvider procedure.</li>
					 
			<!--  <img src="../../plugins/EC-WebSphere/images/CreateJDBCProvider/EC-WebSphereCreateJDBCProvider1.png" /> -->
			
			<li>Enter the following

            parameters:</li><img src="../../plugins/EC-WebSphere/images/CreateJDBCProvider/EC-WebSphereCreateJDBCProvider2.png" />
			
			</ol>      

                   

            <p>After the job runs, you can view the results, including the following job details, 

            which show that JDBC provider was successfully created:</p>
			
			<img src="../../plugins/EC-WebSphere/images/CreateJDBCProvider/EC-WebSphereCreateJDBCProvider3.png" />

             

            <p>In the <b>CreateJDBCProvider</b> step, click the Log icon

            to see the diagnostic information. The output is similar to

            the following diagnostic

            report.</p><img src="../../plugins/EC-WebSphere/images/CreateJDBCProvider/EC-WebSphereCreateJDBCProvider4.png" />

            </div>
			
		
		
		<div id="DeleteConfiguration">

            <a name="DeleteConfiguration"

                 id="DeleteConfiguration"></a> 



            <h2>DeleteConfiguration</h2>



            <p>This procedure deletes a WebSphere configuration.</p>

            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>



                        <th>Description</th>

                    </tr>

                </thead>



                <tbody>

                    <tr>

                        <td class="required">config</td>



                        <td>The name of the configuration to delete.</td>

                    </tr>

                    
                </tbody>

            </table>

            </div>
		
		
		
		<div id="DeleteDatasource">

            <a name="DeleteDatasource"

                 id="DeleteDatasource"></a> 



            <h2>DeleteDatasource</h2>



            <p>This procedure deletes a datasource using a Jython script.</p>

            <h3>DeleteDatasource Parameters</h3>

            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>



                        <th>Description</th>

                    </tr>

                </thead>



                <tbody>

                    <tr>

                        <td class="required">Wsadmin Absolute Path</td>



                        <td>The absolute path of the wsadmin tool that includes the filename and extension. If the path in which wsadmin is stored is in the PATH environmental variable, the absolute path is omitted. Examples are <i>/path/to/wsadmin.sh</i> and <i>wsadmin.bat</i>.</td>

                    </tr>

                    <tr>

                        <td class="required">Configuration Name</td>



                        <td>The name of the configuration to use. ElectricCommander gets the URL, port, and credentials from this configuration.</td>

                    </tr>

                    <tr>

                        <td class="required">Datasource Name</td>



                        <td>The name of the datasource that is unique in the WebSphere domain.</td>

                    </tr>

                    <tr>

                        <td class="required">Connection Type</td>



                        <td>The type of connection used to connect to the application server that you want to administer. The valid options are SOAP, RMI, and NONE.</td>

                    </tr>

                </tbody>

            </table>

            <h3>Deleting Datasources</h3>

            <p>To delete a datasource, do these steps:</p>

            <ol>

            <li>Go to the DeleteDatasource procedure.</li>
            
			<!--  <img src="../../plugins/EC-WebSphere/images/DeleteDatasource/EC-WebSphereDeleteDatasource1.png" /> -->
			
			<li>Enter the following parameters:</li>

            <img src="../../plugins/EC-WebSphere/images/DeleteDatasource/EC-WebSphereDeleteDatasource2.png" />
            
            </ol>			

            <p>After the job runs, you can view the results, including the following job details, 

            which show that the datasource was deleted

            successfully:</p><img src="../../plugins/EC-WebSphere/images/DeleteDatasource/EC-WebSphereDeleteDatasource3.png" />

             



            <p>In the <b>DeleteDatasource</b> step, click the Log icon

            to see the diagnostic information. The output is similar to

            the following diagnostic

            report.</p><img src="../../plugins/EC-WebSphere/images/DeleteDatasource/EC-WebSphereDeleteDatasource4.png" />

            </div>
		
		
		
		<div id="DeleteJDBCProvider">

            <a name="DeleteJDBCProvider"

                 id="DeleteJDBCProvider"></a> 



            <h2>DeleteJDBCProvider</h2>



            <p>This procedure deletes a JDBC provider using a Jython script.</p>

            <h3>DeleteJDBCProvider Parameters</h3>

            <table class="grid">

                <thead>

                    <tr>

                        <th>Parameter</th>
						
                        <th>Description</th>
						
                    </tr>

                </thead>



                <tbody>

                    <tr>

                        <td class="required">Wsadmin Absolute Path</td>



                        <td>The absolute path of the wsadmin tool that includes the filename and extension. If the path in which wsadmin is stored is in the PATH environmental variable, the absolute path is omitted, such as <i>/path/to/wsadmin.sh</i> or <i>wsadmin.bat</i>.</td>

                    </tr>

                    <tr>

                        <td class="required">Configuration Name</td>



                        <td>The name of the configuration to use. ElectricCommander gets the URL, port, and credentials from this configuration.</td>

                    </tr>

                    <tr>

                        <td class="required">JDBC Provider Name</td>



                        <td>The name of the JDBC Provider that is unique in the WebSphere domain.</td>

                    </tr>

                    <tr>

                        <td class="required">Connection Type</td>



                        <td>The type of connection used to connect to the application server that you want to administer. The valid options are SOAP, RMI, and NONE.</td>

                    </tr>

                </tbody>

            </table>

            <h3>Deleting JDBC Providers</h3>

            <p>To delete a JDBC provider, do these steps:</p>

             <ol> 
			 
			<li>Go to the DeleteJDBCProvider procedure. </li>
			 
			<li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/DeleteJDBCProvider/EC-WebSphereDeleteJDBCProvider2.png" />
			
			</ol>          



            <p>After the job runs, you can view the results, including the following job details, which show that 

            the JDBC provider was deleted successfully:</p>
			
			<img src="../../plugins/EC-WebSphere/images/DeleteJDBCProvider/EC-WebSphereDeleteJDBCProvider3.png" />

             



            <p>In the <b>DeleteJDBCProvider</b> step, click the Log icon

            to see the diagnostic information. The output is similar to

            the following diagnostic

            report.</p>
			
			<img src="../../plugins/EC-WebSphere/images/DeleteJDBCProvider/EC-WebSphereDeleteJDBCProvider4.png" />

            </div>
		
		
		
		
		
		<div id="DeployApp">
            <a name="DeployApp"
                 id="DeployApp"></a> 

            <h2>DeployApp</h2>

            <p>This procedure deploys an application using a Jython script
            that invokes AdminApp.install for the deployment
            process.</p>
<h3>DeployApp Parameters</h3>
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>

                        <th>Description</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td>Commands</td>

                        <td>Commands to enter in the wsadmin tool. Use one command per line.</td>
                    </tr>

                    <tr>
                        <td>Java Parameters</td>

                        <td>Java options to to pass to wsadmin. Separate them with semicolons (;).</td>
                    </tr>

                    <tr>
                        <td>Classpath</td>

                        <td>The JAR files to pass to the wsadmin
                        classpath. This is a string containing the paths
                        (separated by semicolons) to the required JAR files 
                        that execute wsadmin in a particular job. Examples are
                        <i>c:/MyDir/Myjar.jar;d:/yourdir/yourdir.jar</i>
                        and 
                       <i>/MyDir/Myjar.jar;/yourdir/yourdir.jar</i>.</td>
                    </tr>

                    <tr>
                        <td class="required">Wsadmin Absolute
                        Path</td>

                        <td>The absolute path of the wsadmin tool that include the 
                        filename and extension. If the path in
                        which wsadmin is stored in is the path
                        environmental variable, the absolute path
                        is omitted. Examples are <i>/path/to/wsadmin.sh</i>
                        and <i>wsadmin.bat</i>. </td>
                    </tr>

                    <tr>
                        <td class="required">Application Name</td>

                        <td>The name of the web application to deploy, such as <i>webapp</i>. </td>
                    </tr>

                    <tr>
                        <td class="required">Application Path</td>

                        <td>The absolute path of the application, such as <i>/path/to/webapp.war</i>
                        or <i>c:/mydir/webapp.war</i>.
                        </td>
                    </tr>

                    <tr>
                        <td>Configuration Name</td>

                        <td>The name of the configuration to use.
                        ElectricCommander gets the URL, port, and credentials from
                        this configuration.</td>
                    </tr>

                    <tr>
                        <td>Additional Commands</td>

                        <td>Additional commands enter in the wsadmin tool.</td>
                    </tr>

                    <tr>
                        <td>Connection Type</td>

                        <td>The type of connection used
                        to connect to the application server that
                        you want to administer. The valid options
                        are SOAP, RMI, and NONE. The default is
                        SOAP.</td>
                    </tr>
                </tbody>
            </table>
<h3>Deploying Applications</h3>
            <p>To deploy an application, do these steps:select the following
            highlighted
            step:</p>

			<ol>
			
			<li>Go to the DeployApp procedure.</li>
			
			<li>Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/DeployApp/deployApp2.png" />
			
			</ol>  
            <p>After the job runs, you can view the results, including the following job details, which show that the 
            application was deployed
            successfully:</p><img src="../../plugins/EC-WebSphere/images/DeployApp/deployApp3.png" />
             

            <p>In the <b>DeployApp</b> step, click the Log icon to
            see the diagnostic information. The output is similar to the
            following diagnostic
            report.</p><img src="../../plugins/EC-WebSphere/images/DeployApp/deployApp4.png" />
            </div>

        <div id="RunCustomJob">
            <a id="RunCustomJob"
                 name="RunCustomJob"></a> 

            <h2>RunCustomJob</h2>

            <p>This procedure runs a task using wsadmin and the Jython code files.</p>
            <h3>RunCustomJob Parameters</h3>
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>

                        <th>Description</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td>Commands</td>

                        <td>The commands to enter in the wsadmin tool. Use
                        one command per line.</td>
                    </tr>

                    <tr>
                        <td>Java Parameters</td>

                        <td>The Java options to pass to wsadmin.
                        Separate them with semicolons (;).</td>
                    </tr>

                    <tr>
                        <td>Classpath</td>

                        <td>The JAR files to pass to the wsadmin classpath. This is a string containing paths
                        (separated by semicolons) to the required JAR files that execute wsadmin in a particular job. Examples are 
                        <i>c:/MyDir/Myjar.jar;d:/yourdir/yourdir.jar</i>
                        and 
                        <i>/MyDir/Myjar.jar;/yourdir/yourdir.jar</i>.</td>
                    </tr>

                    <tr>
                        <td class="required">Wsadmin Absolute
                        Path</td>

                        <td>The absolute path to the wsadmin tool that includes
                        the filename and extension. If the path in
                        which wsadmin is stored is in the path
                        environmental variable, the absolute path
                        is omitted. Examples are <i>/path/to/wsadmin.sh</i>
                        and <i>wsadmin.bat</i>. </td>
                    </tr>

                    <tr>
                        <td>Script File Absolute Path</td>

                        <td>The path of a Jython script that will be
                        run using wsadmin. This path is used only
                        when the <i>Supplied File</i> option in the 
                        <i>Script File Source</i> parameter is selected. 
                        Examples are <i>/path/to/scriptFile.jython</i> and 
                        <i>c:/dir/scriptFile.jython</i>.</td>
                    </tr>

                    <tr>
                        <td class="required">Script File
                        Source</td>

                        <td>The source is a script file route (<i>Supplied File</i>)
                        or an embedded script file (<i>New Script File</i>). </td>
                    </tr>

                    <tr>
                        <td>Script File</td>

                        <td>The content of the script file when the 
                        <i>New Script File</i> is selected for the <i>Script File
                        Source</i>. This parameter is used only when the
                        <i>New Script File</i> option in the <i>Script File Source</i> 
						
						is selected.</td>
                    </tr>

                    <tr>
                        <td>Configuration Name</td>

                        <td>The name of the configuration to use.
                        ElectricCommander gets the URL, port, and credentials from
                        this configuration.</td>
                    </tr>

                    <tr>
                        <td>Additional Commands</td>

                        <td>Additional commands to enter in the 
                        wsadmin tool.</td>
                    </tr>

                    <tr>
                        <td>Connection Type</td>

                        <td>The type of connection used
                        to connect to the application server that
                        you want to administer. The valid options
                        are SOAP, RMI, and NONE. The default is
                        SOAP.</td>
                    </tr>
                </tbody>
            </table>
            <h3>Running Custom Jobs</h3>
            <p>For a complete example, go to the <i>Examples and Use Cases</i> section.</p>
        </div>

        <div id="StartApp">
            <a id="StartApp"
                 name="StartApp"></a> 

            <h2>StartApp</h2>

            <p>This procedure starts an application using wsadmin.</p>
            <h3>StartApp Parameters</h3>
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>

                        <th>Description</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td>Commands</td>

                        <td>The commands to enter in the wsadmin tool. Use
                        one command per line.</td>
                    </tr>

                    <tr>
                        <td>Java Parameters</td>

                        <td>The Java options to pass to wsadmin.
                       Separate them with semicolons (;).</td>
                    </tr>

                    <tr>
                        <td>Classpath</td>

                        <td>The JAR files to pass to the wsadmin
                        classpath. It is a string containing paths
                        (semicolon-separated) to the required JAR files that 
                        execute wsadmin in a particular job. 
                        Examples are <i>c:/MyDir/Myjar.jar;d:/yourdir/yourdir.jar</i>
                       and <i>/MyDir/Myjar.jar;/yourdir/yourdir.jar</i>.</td>
                    </tr>

                    <tr>
                        <td class="required">Wsadmin Absolute
                        Path</td>

                        <td>The absolute path to the wsadmin tool that includes
                        the filename and extension. If the path in
                        which wsadmin is stored is in the path
                        environmental variable, the absolute path
                        is omitted. Examples are <i>/path/to/wsadmin.sh</i>
                        and <i>wsadmin.bat</i>. </td>
                    </tr>

                    <tr>
                        <td class="required">Application Name</td>

                        <td>The name of the application to start, such as 
						
                        <i>webapp</i>. </td>
                    </tr>

                    <tr>
                        <td>Configuration Name</td>

                        <td>The name of the configuration to use.
                        ElectricCommander gets the URL, port, and credentials from
                        this configuration.</td>
                    </tr>

                    <tr>
                        <td>Additional Commands</td>

                        <td>Additional commands to be entered in the 
                        wsadmin tool.</td>
                    </tr>

                    <tr>
                        <td>Connection Type</td>

                        <td>The type of connection used
                        to connect to the application server that
                        you want to administer. The valid options
                        are SOAP, RMI, and NONE. The default is
                        SOAP.</td>
                    </tr>
                </tbody>
            </table>
            <h3>Starting Applications</h3>
            <p>To start an application, do these steps:</p>
             <ol>
			 
			<li>Go to the StartApp procedure.</li>
			 
			<li>Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/StartApp/startApp2.png" />
			 
			 </ol>

            <p>After the job runs, you can view the results, including the following job details, 
            
			which show that application was started
            successfully:</p><img src="../../plugins/EC-WebSphere/images/StartApp/startApp3.png" />
             

            <p>In the <b>StartApp</b> step, click the Log icon to
            see the diagnostic information. The output is similar to the
            following diagnostic
            report.</p><img src="../../plugins/EC-WebSphere/images/StartApp/startApp4.png" />
            </div>

        <div id="StartServer">
            <a name="StartServer"
                 id="StartServer"></a> 

            <h2>StartServer</h2>

            <p>This procedure starts a WebSphere instance.</p>
            <h3>StartServer Parameters</h3>
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>

                        <th>Description</th>
                    </tr>
                </thead>

                <tbody>
				
				    <tr>

                        <td class="required">Instance Name</td>



                        <td>The name of the instance of the server

                        to start, such as <i>server01</i>.

                        </td>

                    </tr>
					
                    <tr>
                        <td class="required">Wsadmin Absolute
                        Path</td>

                        <td>The absolute path of the StartServer
                        script that includes the filename and extension.
                        If the path in which wsadmin is stored is in
                        the PATH environmental variable, the
                        absolute path is omitted. Examples are 
                        <i>startServer.bat</i>, 
                        <i>/path/to/startServer.sh</i>, and 
                        <i>C:\Program
                        Files\IBM\WebSphere\AppServer\bin\startServer.bat</i>.
                        </td>
                    </tr>
                 
                    <tr>
                        <td>Additional Commands</td>

                        <td>Additional commands to enter when 
                        the server starts.</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div id="StopApp">
            <a id="StopApp"
                 name="StopApp"></a> 

            <h2>StopApp</h2>

            <p>This procedure stops an application using wsadmin.</p>
            <h3>StopApp Parameters</h3>
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>

                        <th>Description</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td>Commands</td>

                        <td>The commands to enter in the wsadmin tool. Use
                        one command per line.</td>
                    </tr>

                    <tr>
                        <td>Java Parameters</td>

                        <td>The Java options to pass to the wsadmin tool.
                        Separate them with semicolons (;).</td>
                    </tr>

                    <tr>
                        <td>Classpath</td>

                        <td>The JAR files to be passed to the wsadmin
                        classpath. This is a string containing paths
                        (separated by semicolons) to the required JAR files that 
                        execute wsadmin in a particular job. 
                        Examples are <i>c:/MyDir/Myjar.jar;d:/yourdir/yourdir.jar</i>
                       and 
                       <i>/MyDir/Myjar.jar;/yourdir/yourdir.jar</i>.</td>
                    </tr>

                    <tr>
                        <td class="required">Wsadmin Absolute
                        Path</td>

                        <td>The absolute path of wsadmin that includes the
                        filename and extension. If the path in
                        which wsadmin is stored is in the path
                        environmental variable, the absolute path
                        is omitted, such as <i>/path/to/wsadmin.sh</i>  
                        and <i>wsadmin.bat</i>. </td>
                    </tr>

                    <tr>
                        <td class="required">Application Name</td>

                        <td>The name of the application to stop, such as 
                        <i>webapp</i>. </td>
                    </tr>

                    <tr>
                        <td>Configuration Name</td>

                        <td>The name of the configuration to use.
                        ElectricCommmander gets the URL, port, and credentials from
                        this configuration.</td>
                    </tr>

                    <tr>
                        <td>Additional Commands</td>

                        <td>Additional commands to enter in the wsadmin tool.</td>
                    </tr>

                    <tr>
                        <td>Connection Type</td>

                        <td>The type of connection used
                        to connect to the application server that
                        you want to administer. The valid options
                        are SOAP, RMI, and NONE. The default is
                        SOAP.</td>
                    </tr>
                </tbody>
            </table>
            <h3>Stopping Applications</h3>
            <p>To stop an application, do these steps:</p>
            <ol>

            <li>Go to the StopApp procedure.</li>

            <li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/StopApp/stopApp2.png" />
            
			</ol>			

             

            <p>After the job runs, you can view the results, including the following job details, which show that 
            the application was stoped
            successfully: </p><img src="../../plugins/EC-WebSphere/images/StopApp/stopApp3.png" />
             

            <p>In the <b>StopApp</b> step, click the Log icon to
            see the diagnostic information. The output is similar to the
            following diagnostic
            report. </p><img src="../../plugins/EC-WebSphere/images/StopApp/stopApp4.png" />
            </div>

        <div id="StopServer">
            <a name="StopServer"
                 id="StopServer"></a> 

            <h2>StopServer</h2>

            <p>This procedure stops a WebSphere instance.</p>
            <h3>StopServer Parameters</h3>
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>

                        <th>Description</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td class="required">Script Location</td>

                        <td>The absolute path to the start
                        server script. Leave this blank when the 
                        script is loaded in the system
                        path.</td>
                    </tr>

                    <tr>
                        <td class="required">Instance Name</td>

                        <td>The name of the server instance to
                        stop, such as <i>server01</i>.
                        </td>
                    </tr>

                    <tr>
                        <td>Configuration Name</td>

                        <td>The name of the configuration to use.
                        ElectricCommander gets the URL, port, and credentials from
                        this configuration.</td>
                    </tr>

                    <tr>
                        <td>Additional Commands</td>

                        <td>Additional commands to enter to stop the server.</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div id="UndeployApp">
            <a name="UndeployApp"
                 id="UndeployApp"></a> 

            <h2>UndeployApp</h2>

            <p>This procedure undeploys an application using a Jython script
            and invoking AdminApp.uninstall.</p>

            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>

                        <th>Description</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td>Commands</td>

                        <td>The commands to enter in the wsadmin tool. Use one command per line.</td>
                    </tr>

                    <tr>
                        <td>Java Parameters</td>

                        <td>The Java options to pass to the wsadmin tool. Separate them with semicolons (;).</td>
                    </tr>

                    <tr>
                        <td>Classpath</td>

                        <td>The JAR files to pass to the wsadmin
                        classpath. This is a string containing paths
                        (separated by semicolons) to the required JAR files that 
                        execute wsadmin in a specific job. Examples are
                       <i>c:/MyDir/Myjar.jar;d:/yourdir/yourdir.jar</i>
                        and 
                        <i>/MyDir/Myjar.jar;/yourdir/yourdir.jar</i>.</td>
                    </tr>

                    <tr>
                        <td class="required">Wsadmin Absolute
                        Path</td>

                        <td>The absolute path to the wsadmin tool that includes
                        the filename and extension. If the path in
                        which wsadmin is stored is in the PATH
                        environmental variable, the absolute path
                        is omitted, such as <i>/path/to/wsadmin.sh</i>
                       and <i>wsadmin.bat</i>. </td>
                    </tr>

                    <tr>
                        <td class="required">Application Name</td>

                        <td>The name of the application, such as 
                        <i>webapp</i>. </td>
                    </tr>

                    <tr>
                        <td>Configuration Name</td>

                        <td>The name of the configuration to use.
                        ElectricCommander gets the URL, port, and credentials from
                        this configuration.</td>
                    </tr>

                    <tr>
                        <td>Additional Commands</td>

                        <td>Additional commands to enter in the wsadmin tool.</td>
                    </tr>

                    <tr>
                        <td>Connection Type</td>

                        <td>The type of connection used
                        to connect to the application server that
                        you want to administer. The valid options
                        are SOAP, RMI, and NONE. Default is
                        SOAP.</td>
                    </tr>
                </tbody>
            </table>
            <h3> Undeploying Applications</h3>
            <p>To undeploy an application, do these steps:</p>
            <ol> 
		   
		    <p>Go to the UndeployApp procedure.</p>
		   
		    <p>Enter the following parameters: </p><img src="../../plugins/EC-WebSphere/images/UndeployApp/undeployApp2.png" />
			
		   </ol>
			
	       <p>After the job runs, you can view the results, including the following job details, which show that
            the application was undeployed
            successfully:</p><img src="../../plugins/EC-WebSphere/images/UndeployApp/undeployApp3.png" />
            <p>In the <b>UndeployApp</b> step, click the Log icon
            to see the diagnostic information. The output is similar to
            the following diagnostic
            report.</p><img src="../../plugins/EC-WebSphere/images/UndeployApp/undeployApp4.png" />
        </div>   
       

        <h1>Examples and Use Cases</h1>
        <!-- This section is for examples and use cases, including
        screenshots of the new Parameter Panel with example values
        filled in. Unfortunately, I can't tell you what exactly to put
        here, but it's OK to put what seems like too much! Include both
        parameter values and output where appropriate. Use a separate
        'h2' header for each example. Under the h2 header try to stay
        with the style outline used above where possible. -->

        <h2>Running Custom Jobs</h2>

        <p>This example shows how to print a "Hello
        World!" message in the output using the <i>Supplied File</i> option
        with an existing script file in a path and using the <i>New
        Script File</i> option with embedded code.</p>
        <p>To run a custom job: </p>
		
        <ol>

        <li>Select the following step: </li><img src="../../plugins/EC-WebSphere/images/RunCustomJob/runCustomJob1.png" />

        <li>Select the <i>Script File Source</i>: a script file route (<i>Supplied File</i>) or an embedded script file (<i>New Script File</i>). </li>
		
		<ul>
		
		<li>Enter the following parameters for the <i>Supplied File</i> option: </li><img src="../../plugins/EC-WebSphere/images/RunCustomJob/runCustomJob2.png" />
		
		<li>Enter the following parameters for the <i>New Script File</i> option: </li><img src="../../plugins/EC-WebSphere/images/RunCustomJob/runCustomJob3.png" />
		
		</ul>
        
		</ol>
		
		   
     

        <p>After the job runs, you can view the results, including the following job details, which show that
        the job was run successfully
        execution. The following results applies to both the <i>Supplied File</i> and <i>New Script File</i> options: </p>
        <img src="../../plugins/EC-WebSphere/images/RunCustomJob/runCustomJob4.png" />
         

        <p>In the <b>RunJob</b> step, click the Log icon to see the
        log information. It applies to both the <i>Supplied File</i> and <i>New Script File</i> options. 
        The output is similar to the following sample:</p><img src="../../plugins/EC-WebSphere/images/RunCustomJob/runCustomJob5.png" />
         

        <p>This is the <i>HelloWorld.jython</i> file
        used with the <i>Supplied File</i>
        option:</p><img src="../../plugins/EC-WebSphere/images/RunCustomJob/runCustomJob6.png" />
         

        
    </div>

<h1>What's New for EC-WebSphere 2.0.6</h1>
		
		<h2>Features and Enhancements</h2>
		
		<!-- List any new or revised procedures, new features, enhancements to existing features, changed behaviour, and documentation updates for the latest release.
		
		Replace the examples below with actual new or changed items.-->

        <ul>
		
		<!--When available, add these to the list: New procedures in the plugin, Updates for existing procedures, and Changed behaviour and functionality
		-->
		
		<li>Starting in EC-WebSphere 2.0.6, add information about the changes in the plugin release, including details about resolved issues, changed behaviour and functionality, and new features, to this document. (NMB-18829)</li>
		
		<li>Restructured the information in this document.</li>
		
		</ul>
		
		<h2>Resolved Issues</h2>

        <ul>

		    <li>Fixed the DeployApp procedure to not include the password in the log file.</li>
		
            <li>Fixed the problem about attaching credentials in the CheckApp procedure. <!--Need more information about this bug.--></li>

            <li>Fixed the problem where the wsadmin password appeared when you view job step log files and property information.</li>
			
			<li>Fixed instructions to create WebSphere plugin configurations.</li>
		
		    <li>Fixed instructions to access plugins in ElectricCommander. </li>

        </ul>

    <h1>What's New for Previous EC-WebSphere Releases</h1>  

		<h2>EC-WebSphere 2.0.5</h2>



		<ul>

			<li>Fix minor bugs.</li>

		</ul>



		<h2>EC-WebSphere 2.0.4</h2>



		<ul>

			<li>Add four new procedures: CreateDatasources, DeleteDatasources, CreateJDBCProviders, and DeleteJDBCProviders.</li>

         <li>Fix minor bugs.</li>

		</ul>



		<h2>EC-WebSphere 2.0.3</h2>



		<ul>

			<li>Change the procedure names in the step picker section.</li>

		</ul>

		

        <h2>EC-WebSphere 2.0.2</h2>



        <ul>

            <li>Make improvements to the help document.</li>

        </ul>



        <h2>EC-WebSphere 2.0.1</h2>



        <ul>

            <li>Use the new Parameter Form XML.</li>



            <li>Add a link directly to the new help

            document.</li>

        </ul>



        <h2>EC-WebSphere 2.0.0</h2>



        <ul>

            <li>Use the new help page format.</li>



            <li>Add new parameter panels for each procedure.</li>

        </ul>



        <h2>EC-WebSphere 1.3.0</h2>



        <ul>

            <li>Add the CheckPageStatus procedure.</li>



            <li>Remove the CURL dependency from the

            CheckServerStatus procedure.</li>



            <li>Fix minor bugs.</li>



            <li>The procedures now have only one step using ec-perl

            to execute the necessary commands.</li>

        </ul>



        <h2>EC-WebSphere 1.2.1</h2>



        <ul>

            <li>Fix a minor bug on the Configuration List page.</li>

        </ul>



        <h2>EC-WebSphere 1.2.0</h2>



        <ul>

            <li>Add the StartApp, StopApp, DeployApp, and

            UndeployApp procedures.</li>

        </ul>



        <h2>EC-WebSphere 1.1.1</h2>



        <ul>

            <li>Jython commands can now be entered manually in the 

            RunCustomJob procedure.</li>



            <li>The absolute path of executable files now requires the path and

            filename with an extension.</li>

        </ul>



        <h2>EC-WebSphere 1.1.0</h2>



        <ul>

            <li>Add the RunCustomJob procedure.</li>

        </ul>
	

	
</body>
</html>

