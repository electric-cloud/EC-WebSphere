<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta content="text/html; charset=us-ascii" http-equiv="content-type"/>
    <title>@PLUGIN_KEY@ Plugin</title>
    <link rel="stylesheet" href="../../plugins/@PLUGIN_NAME@/pluginhelp.css" type="text/css" media="screen"/>
</head>
<body>
<!--
    Generated by PluginWizardHelp
    https://github.com/electric-cloud/PluginWizardHelp
    Do *NOT* edit manually, use help file generation.
-->
<div class="help">
    <h1>@PLUGIN_KEY@</h1>
    <p>Plugin version @PLUGIN_VERSION@</p>
    
    <p>Revised on November 06, 2018</p>
    
    <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade"/>
    <h1>Contents</h1>
    <ul>
    <li><a href="#overview">Overview</a></li>
    

    

    
    <li><a href="#CreateConfiguration">Plugin Configuration</a></li>
    

    <li><a href="#procedures">Plugin Procedures</a></li>
    <li>WAS Server Component Management<br/><i>These procedures for WAS component management</i></li><ul><li><a href="#CreateEndToEndMailProvider">CreateEndToEndMailProvider</a></li><li><a href="#CreateEJBContainer">CreateEJBContainer</a></li><li><a href="#CreateMailSession">CreateMailSession</a></li><li><a href="#PublishWSDL">PublishWSDL</a></li></ul><li>WAS Server Management Procedures<br/><i>These procedures for WAS server management</i></li><ul><li><a href="#CreateApplicationServer">CreateApplicationServer <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#DeleteApplicationServer">DeleteApplicationServer <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#CreateApplicationServerTemplate">CreateApplicationServerTemplate <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#DeleteApplicationServerTemplate">DeleteApplicationServerTemplate <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#CreateCluster">CreateCluster <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#DeleteCluster">DeleteCluster <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#ExportApplicationServer">ExportApplicationServer <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#ImportApplicationServer">ImportApplicationServer <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#ListClusterMembers">ListClusterMembers <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#RemoveClusterMembers">RemoveClusterMembers <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#SyncNodes">SyncNodes <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#ConfigureEJBContainer">ConfigureEJBContainer</a></li><li><a href="#CreateFirstClusterMember">CreateFirstClusterMember <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#CreateClusterMembers">CreateClusterMembers <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li></ul><li>WAS Server Administration Procedures<br/><i>These procedures for was server administation.</i></li><ul><li><a href="#StartApplicationServers">StartApplicationServers <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#StopApplicationServers">StopApplicationServers <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#StartCluster">StartCluster <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#StopCluster">StopCluster <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#StartDeploymentManager">StartDeploymentManager <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#StopDeploymentManager">StopDeploymentManager <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#StartNode">StartNode <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#StopNode">StopNode <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#StartServer">StartServer</a></li><li><a href="#StopServer">StopServer</a></li><li><a href="#RunCustomJob">RunCustomJob</a></li></ul><li>WAS Application Component Management Procedures<br/><i>These procedures for application component management.</i></li><ul><li><a href="#ConfigureSession">ConfigureSession</a></li><li><a href="#MapSharedLibrary">MapSharedLibrary</a></li><li><a href="#ModifyApplicationClassLoader">ModifyApplicationClassLoader</a></li></ul><li>WAS Application Administration Procedures<br/><i>These procedures for application administration.</i></li><ul><li><a href="#StartApp">StartApp</a></li><li><a href="#StopApp">StopApp</a></li></ul><li>WAS Datasource Management Procedures<br/><i>These procedures for datasource management.</i></li><ul><li><a href="#CreateJDBCProvider">CreateJDBCProvider</a></li><li><a href="#DeleteJDBCProvider">DeleteJDBCProvider</a></li><li><a href="#CreateDatasource">CreateDatasource</a></li><li><a href="#DeleteDatasource">DeleteDatasource</a></li></ul><li>WAS JMS Management Procedures<br/><i>These procedures for JMS resources management.</i></li><ul><li><a href="#CreateJMSProvider">CreateJMSProvider</a></li><li><a href="#DeleteJMSProvider">DeleteJMSProvider</a></li><li><a href="#CreateOrUpdateJMSQueue">CreateOrUpdateJMSQueue</a></li><li><a href="#DeleteJMSQueue">DeleteJMSQueue</a></li><li><a href="#CreateOrUpdateJMSTopic">CreateOrUpdateJMSTopic</a></li><li><a href="#DeleteJMSTopic">DeleteJMSTopic</a></li><li><a href="#CreateOrUpdateSIBJMSActivationSpec">CreateOrUpdateSIBJMSActivationSpec</a></li><li><a href="#CreateOrUpdateWMQJMSActivationSpec">CreateOrUpdateWMQJMSActivationSpec</a></li><li><a href="#DeleteJMSActivationSpec">DeleteJMSActivationSpec</a></li><li><a href="#CreateOrUpdateSIBJMSConnectionFactory">CreateOrUpdateSIBJMSConnectionFactory</a></li><li><a href="#CreateOrUpdateWMQJMSConnectionFactory">CreateOrUpdateWMQJMSConnectionFactory</a></li><li><a href="#DeleteJMSConnectionFactory">DeleteJMSConnectionFactory</a></li></ul><li>WAS Application Deployment Procedures<br/><i>These procedures for applications deployment.</i></li><ul><li><a href="#DeployApp">DeployApp</a></li><li><a href="#DeployEnterpriseApp">DeployEnterpriseApp</a></li><li><a href="#DeployOSGIApp">DeployOSGIApp</a></li><li><a href="#UndeployApp">UndeployApp</a></li><li><a href="#UpdateApp">UpdateApp</a></li></ul><li>Check Procedures<br/><i>Procedures for status checking</i></li><ul><li><a href="#CheckApp">CheckApp</a></li><li><a href="#CheckNodeStatus">CheckNodeStatus <b>(Applicable only for WebSphere Network Deployment installation.)</b>
</a></li><li><a href="#CheckPageStatus">CheckPageStatus</a></li><li><a href="#CheckServerStatus">CheckServerStatus</a></li></ul>
    
    
    <li><a href="#releaseNotes">Release Notes</a></li>
</ul>
    <h3>Overview</h3>
    <p><p>WebSphere Application Server (WAS) is a software product that performs the role of a web application server.
More specifically, it is a software framework and middleware that hosts Java based web applications.
It is the flagship product within IBM's WebSphere software suite.
It was initially created by Donald F. Ferguson, who later became CTO of Software for Dell.
The first version was launched in 1998.
WAS is built using open standards such as Java EE, XML, and Web Services.
It is supported on the following platforms:</p>
<ul>
<li>Windows</li>
<li>AIX</li>
<li>Linux</li>
<li>Solaris</li>
<li>IBM i and z/OS.</li>
</ul>
<p>Beginning with Version 6.1 and now into Version 9.0, the open standard specifications are aligned and common across all the platforms.
Platform exploitation, to the extent it takes place, is done below the open standard specification line.
It works with a number of Web servers including Apache HTTP Server, Netscape Enterprise Server, Microsoft Internet Information Services (IIS), IBM HTTP Server for i5/OS, IBM HTTP Server for z/OS, and IBM HTTP Server for AIX/Linux/Microsoft Windows/Solaris.
It uses port 9060 for connection as the default administration port and port 9080 as the default website publication port.
In case you install more WebSphere instances these values will be changed.</p>
<p>For more information about WebSphere, go to the <a href="http://www-01.ibm.com/software/websphere/">WebSphere Home Page</a>.</p>
<h2>Electric Flow Integration to WebSphere</h2>
<p>You can use this plugin to interact with an IBM
WebSphere Server. You can start and stop the server.
You can also manage applications within the server (start,
deploy, undeploy, stop or custom task) using the provided
WebSphere scripts in the <strong>bin</strong> directory under
the installation home directory (wsadmin, startServer,
stopServer). You can run Jython scripts that are
provided by the user or defined when a procedure is
created.</p>
<h2>Integrated Version</h2>
<p>The plugin was tested on following WebSphere versions:</p>
<ul>
<li>WAS and WASND 9.0 on Linux and Windows</li>
<li>WAS and WASND 8.5.5 on Linux and Windows</li>
<li>WAS and WASND 8.5.0 on Linux and Windows</li>
<li>WAS and WASND 8.0 on Linux and Windows</li>
<li>WAS 7.0 on Linux and Windows.
Beginning Release 2.4 we do not certify this plugin on the 7.0 version of WAS considering that this version is not actively supported by IBM since April 2018.
Please refer to this <a href="https://www-01.ibm.com/common/ssi/ShowDoc.wss?docURL=/common/ssi/rep_ca/3/897/ENUS916-143/index.html&amp;lang=en&amp;request_locale=en">IBM Link</a></li>
</ul>
</p>
    
    

    
    <!--TODO custom blocks-->

    
    <div id="CreateConfiguration">
        <a name='CreateConfiguration' id="CreateConfiguration"> </a>
        <h2>Plugin Configurations</h2>

        <p>
            Plugin configurations are sets of parameters that apply
            across some or all of the plugin procedures. They
            reduce repetition of common values, create
            predefined parameter sets for end users, and
            securely store credentials where needed. Each configuration
            is given a unique name that is entered in designated
            parameters on procedures that use them.<br /><br />
        </p>

        <h3>Creating Plugin Configurations</h3>
        <p>To create plugin configurations in ElectricFlow,
            do these steps:</p>

        <li>Go to <b>Administration</b> &gt; <b>Plugins</b> to open the Plugin Manager.</li>
        <li>Find the @PLUGIN_NAME@ row.</li>
        <li>Click <b>Configure</b> to open the
             Configurations page.</li>
        <li>Click <b>Create Configuration</b>.</li>
        
        <p><b>Note: After you perform the setup below it is important to make sure that the Electric Flow agent machine on which WebSphere runs is registered as a resource that can be pinged.</b>
<img src="../../plugins/EC-WebSphere/images/Config/parameters.png" /><br />
Plugin configurations are sets of parameters that apply across some or all of the plugin procedures.
They reduce repetition of common values, create predefined parameter sets for end users,
and securely store credentials where needed.
Each configuration is given a unique name that is entered in designated parameters on procedures that use them.</p>

        
        Configuration Parameters
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Identifier of the configuration to create. i.e: myconfig</td>
            </tr>
            
            <tr>
                <td class="required">WSAdmin Absolute Path</td>
                <td>Absolute path to wsadmin script.</td>
            </tr>
            
            <tr>
                <td class="required">Connection Type</td>
                <td>Specifies type of connection to use to connect to the application server that you want to administer.</td>
            </tr>
            
            <tr>
                <td class="required">WebSphere Host</td>
                <td>Hostname of the WebSphere Application Server to administer using wsadmin tool. For example: 10.200.1.234 or yourWSServer.</td>
            </tr>
            
            <tr>
                <td >WebSphere Connector Port</td>
                <td>Port of WebSphere Application server to which wsadmin should connect.Give the port number based on the type of connection you choose.For example, if you want to connect to application server using SOAP connection give the port number of SOAP connector of that server.</td>
            </tr>
            
            <tr>
                <td >Login as</td>
                <td>Credentials used to connect to WebSphere instance.</td>
            </tr>
            
            <tr>
                <td >Debug Level</td>
                <td>Debug level.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>
    

    <h1 id="procedures">Plugin Procedures</h1>
    
    

    
    <div id="CreateEndToEndMailProvider">
        <h2>CreateEndToEndMailProvider</h2>
        
        
        <p>Creates a mail provider along with protocol provider and mail session.</p>
        
        
            <p>This procedure creates mail provider with a protocol provider, a mail session and a custom property in the specified scope.</p>

        
        <h3>CreateEndToEndMailProvider Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td >Wsadmin Absolute Path</td>
                <td>Path to wsadmin. If the location of wsadmin is in the PATH environment variable, then just the script name can be specified omitting its full path. E.g. '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">Scope</td>
                <td>Specifies the scope in which the mail provider supports installed mail applications.For example, 'Cell=Cell01,Node=Node01,Server=server1' or 'Cell=Cell01,ServerCluster=testCluster'</td>
            </tr>
            
            <tr>
                <td class="required">Mail Provider Name</td>
                <td>Specifies the name to be given to the new mail provider .</td>
            </tr>
            
            <tr>
                <td >Mail Provider Description</td>
                <td>Specifies the mail provider description.</td>
            </tr>
            
            <tr>
                <td >Isolate this mail provider?</td>
                <td>Specifies that this mail provider will be loaded in its own class loader. This allows the application server to load different versions or implementations of the same mail provider in the same Java Virtual Machine. Give each version or implementation of the mail provider a unique class path in following (Mail provider classpath) field that is appropriate for that version or implementation.</td>
            </tr>
            
            <tr>
                <td >Mail Provider Classpath</td>
                <td>Specifies the class path to a Java archive (JAR) file that contains the implementation classes for this mail provider.</td>
            </tr>
            
            <tr>
                <td >Custom Property Name</td>
                <td>Specifies the name of custom property to create.</td>
            </tr>
            
            <tr>
                <td >Custom Property Value</td>
                <td>Specifies the value to associate with this custom property of the resource.</td>
            </tr>
            
            <tr>
                <td class="required">Protocol Provider Name</td>
                <td>Specifies the name to be given to the new protocol provider .</td>
            </tr>
            
            <tr>
                <td class="required">Protocol Provider Class Name</td>
                <td>Specifies the implementation class of this protocol provider. </td>
            </tr>
            
            <tr>
                <td class="required">Protocol Provider Type</td>
                <td>Specifies the type of protocol provider. Valid options are STORE(for incoming protocol provider) or TRANSPORT(for outgoing protocol provider).</td>
            </tr>
            
            <tr>
                <td class="required">Mail Session Name</td>
                <td>Specifies the administrative name of the JavaMail session object.</td>
            </tr>
            
            <tr>
                <td class="required">Mail Session JNDI Name</td>
                <td>Specifies the Java Naming and Directory Interface (JNDI) name for the resource, including any naming subcontexts.</td>
            </tr>
            
            <tr>
                <td >Category</td>
                <td>Optional string to use while classifying or grouping the resources.</td>
            </tr>
            
            <tr>
                <td >Enable Debug Mode?</td>
                <td>Select to print the interaction between mail application and mail server as well as the properties of this mail session to System.Out.log file.</td>
            </tr>
            
            <tr>
                <td >Mail Session Description</td>
                <td>Specifies optional description for mail session.</td>
            </tr>
            
            <tr>
                <td >Incoming Mail Server</td>
                <td>Specifies the host name server that is accessed when receiving mail.</td>
            </tr>
            
            <tr>
                <td >Incoming Mail Server Port</td>
                <td>Specifies the port of the server that is accessed when receiving mail.</td>
            </tr>
            
            <tr>
                <td >Incoming Mail Server Credentials</td>
                <td>Specifies the credential for the mail account when the incoming mail server requires authentication.</td>
            </tr>
            
            <tr>
                <td >Outgoing Mail Server</td>
                <td>Specifies the host name of server that is accessed when sending mail.</td>
            </tr>
            
            <tr>
                <td >Outgoing Mail Server Port</td>
                <td>Specifies the port of the server that is accessed when sending mail.</td>
            </tr>
            
            <tr>
                <td >Outgoing Mail Server Credential</td>
                <td>Specifies the user of the mail account when the outgoing mail server requires authentication.</td>
            </tr>
            
            <tr>
                <td >Enable Strict Internet Address Parsing?</td>
                <td>Specifies whether the recipient addresses must be parsed in strict compliance with RFC 822.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>CreateEndToEndMailProvider</h3>
                <p>To create a new mail provider along with protocol provider and mail session, do these steps:</p>
                <ol>
                    <li>Go to the CreateEndToEndMailProvider procedure. </li>
                    <li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/CreateEndToEndMailProvider/EC-WebSphereCreateEndToEndMailProvider2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details, which show that
                OSGi application is deployed successfully:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateEndToEndMailProvider/EC-WebSphereCreateEndToEndMailProvider3.png" />
                <p>In the <b>CreateEndToEndMailProvider</b> step, click the Log icon
                to see the diagnostic information. The output is similar to
                the following diagnostic
                report.</p>
                <img src="../../plugins/EC-WebSphere/images/CreateEndToEndMailProvider/EC-WebSphereCreateEndToEndMailProvider4.png" />

        </p>
        
    </div>

    
    <div id="CreateMailSession">
        <h2>CreateMailSession</h2>
        
        
        <p>Creates a new JavaMail session using the wsadmin tool.</p>
        
        
            <p>This procedure creates a JavaMail session object for default mail provider at specified scope.</p>

        
        <h3>CreateMailSession Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td >Wsadmin Absolute Path</td>
                <td>Path to wsadmin. If the location of wsadmin is in the PATH environment variable, then just the script name can be specified omitting its full path. E.g. '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">Scope</td>
                <td>Specifies the scope in which the mail session supports installed mail applications.For example, 'Cell=Cell01,Node=Node01,Server=server1' or 'Cell=Cell01,ServerCluster=testCluster'</td>
            </tr>
            
            <tr>
                <td class="required">Mail Session Name</td>
                <td>Specifies the administrative name of the JavaMail session object.</td>
            </tr>
            
            <tr>
                <td >Mail Session Description</td>
                <td>Specifies optional description for mail session.</td>
            </tr>
            
            <tr>
                <td class="required">Mail Session JNDI Name</td>
                <td>Specifies the Java Naming and Directory Interface (JNDI) name for the resource, including any naming subcontexts.</td>
            </tr>
            
            <tr>
                <td >Category</td>
                <td>Optional string to use while classifying or grouping the resources.</td>
            </tr>
            
            <tr>
                <td >Enable Debug Mode?</td>
                <td>Select to print the interaction between mail application and mail server as well as the properties of this mail session to System.Out.log file.</td>
            </tr>
            
            <tr>
                <td >Outgoing Mail Server</td>
                <td>Specifies the host name of server that is accessed when sending mail.</td>
            </tr>
            
            <tr>
                <td >Outgoing Mail Server Port</td>
                <td>Specifies the port of the server that is accessed when sending mail.</td>
            </tr>
            
            <tr>
                <td >Outgoing Mail Server Protocol</td>
                <td>Specifies the protocol to use when sending mail.</td>
            </tr>
            
            <tr>
                <td >Outgoing Mail Server Credential</td>
                <td>Specifies the user of the mail account when the outgoing mail server requires authentication.</td>
            </tr>
            
            <tr>
                <td >Return E-mail Address </td>
                <td>Represents the Internet email address that, by default, displays in the received message in the From or the Reply-To address. The recipient's reply will come to this address.</td>
            </tr>
            
            <tr>
                <td >Incoming Mail Server</td>
                <td>Specifies the host name server that is accessed when receiving mail.</td>
            </tr>
            
            <tr>
                <td >Incoming Mail Server Port</td>
                <td>Specifies the port of the server that is accessed when receiving mail.</td>
            </tr>
            
            <tr>
                <td >Incoming Mail Server Protocol</td>
                <td>Specifies the protocol to use when receiving mail.</td>
            </tr>
            
            <tr>
                <td >Incoming Mail Server Credentials</td>
                <td>Specifies the credential for the mail account when the incoming mail server requires authentication.</td>
            </tr>
            
            <tr>
                <td >Enable Strict Internet Address Parsing?</td>
                <td>Specifies whether the recipient addresses must be parsed in strict compliance with RFC 822.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Create Mail Session</h3>
                <p>To create a mail session for default mail provider, do these steps:</p>
                <ol>
                    <li>Go to the CreateMailSession procedure. </li>
                    <li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/CreateMailSession/EC-WebSphereCreateMailSession2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details, which show that
                mail session is created successfully:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateMailSession/EC-WebSphereCreateMailSession3.png" />
                <p>In the <b>CreateMailSession</b> step, click the Log icon
                to see the diagnostic information. The output is similar to
                the following diagnostic
                report.</p>
                <img src="../../plugins/EC-WebSphere/images/CreateMailSession/EC-WebSphereCreateMailSession4.png" />

        </p>
        
    </div>

    
    <div id="PublishWSDL">
        <h2>PublishWSDL</h2>
        
        
        <p>Publishes WSDL files in each web services-enabled module to the file system location</p>
        
        
            <p>This procedure publishes WSDL files in each web services-enabled module to the file system location.</p>

        
        <h3>PublishWSDL Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Absolute Path</td>
                <td>Path to wsadmin. If the location of wsadmin is in the PATH environment variable, then just the script name can be specified omitting its full path. E.g. '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name of the application of which to publish the WSDL file. i.e: 'webapp'. </td>
            </tr>
            
            <tr>
                <td class="required">Location to publish WSDL file</td>
                <td>Filename and absolute path on the filesystem where published WSDL files should get stored.For example, 'C:/webservices/sampleWSDL.zip'</td>
            </tr>
            
            <tr>
                <td >Commands</td>
                <td>Commands to be entered to wsadmin. Use one command per line.</td>
            </tr>
            
            <tr>
                <td >Java Parameters</td>
                <td>Java options to be passed to wsadmin, separate them using semicolons (;).</td>
            </tr>
            
            <tr>
                <td >Classpath</td>
                <td>Jars to be passed to the wsadmin classpath. It is a string containing paths (semicolon-separated) the required JARs to execute wsadmin in a particular job. i.e: 'c:/MyDir/Myjar.jar;d:/yourdir/yourdir.jar' or '/MyDir/Myjar.jar;/yourdir/yourdir.jar'.</td>
            </tr>
            
            <tr>
                <td >SOAP address prefixes</td>
                <td>Give SOAP address prefix in format "{{module {{binding partial-url}}}}"  to customize the WSDL SOAP address for each module.. i.e: '{ {AddressBookJ2WB.war {{http http://localhost:9080}}} {StockQuote.jar {{http https://localhost:9443}}} }'. </td>
            </tr>
            
            <tr>
                <td >Additional Commands</td>
                <td>    Additional commands to be entered for wsadmin.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Publish WSDL</h3>
<p>To publish WSDL files, do these steps:</p>
<ol>
  <li>Go to the PublishWSDL procedure.</li>
  <li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/PublishWSDL/EC-WebSpherePublishWSDL2.png" />
</ol>

        </p>
        
    </div>

    
    <div id="CreateApplicationServer">
        <h2>CreateApplicationServer</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>This procedure creates an Application Server identical to an existing Application Server or an Application Server definition which is part of a template. In addition it will synchronize nodes if checked.</p>
        
        
        <h3>CreateApplicationServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Node Name</td>
                <td>Name of the node where application server is to be created.</td>
            </tr>
            
            <tr>
                <td class="required">Server Name</td>
                <td>Name of application server to be created.</td>
            </tr>
            
            <tr>
                <td >Generate Unique Ports?</td>
                <td>
            By default ports generated during server creation will be created uniquely.
            If not checked ports in template will be used as is for server creation.
        </td>
            </tr>
            
            <tr>
                <td >Source Type</td>
                <td>
            Type of source which should be used for server creation. Select Template or Application Server.
            In case of template, application server template will be used for server creation, in case of Application Server,
            template will be created from existing application server and new server will be created from this template then.
            After successful creation template will be deleted.
        </td>
            </tr>
            
            <tr>
                <td >Source Template Name</td>
                <td>
            This parameter is applicable only when the source is a Template.
            Name of server template to be the source for a new server.
        </td>
            </tr>
            
            <tr>
                <td >Source Template Location</td>
                <td>
            The configuration Id that represents the location of a template.
            This parameter is applicable only when the source is a Template.
        </td>
            </tr>
            
            <tr>
                <td >Source Server Name</td>
                <td>
            Name of application server to be the source for a new server in format nodename:servername.
        </td>
            </tr>
            
            <tr>
                <td >Sync Nodes?</td>
                <td>
            The syncNode command forces a configuration synchronization to occur between the node and the deployment manager for the cell in which the node is configured.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Create Application Server</h3>
<p>To Create Application Server in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/CreateApplicationServer/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/CreateApplicationServer/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/CreateApplicationServer/PipelineResult.png" />
<br />In the <b>CreateApplicationServer</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/CreateApplicationServer/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="DeleteApplicationServer">
        <h2>DeleteApplicationServer</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>This procedure deletes an existing Application Server. In addition it will synchronize nodes if checked.</p>
        
        
        <h3>DeleteApplicationServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Node Name</td>
                <td>Name of the node where application server to be deleted.</td>
            </tr>
            
            <tr>
                <td class="required">Server Name</td>
                <td>Name of application server to be deleted.</td>
            </tr>
            
            <tr>
                <td >Sync Nodes?</td>
                <td>
            The syncNode command forces a configuration synchronization to occur between the node and the deployment manager for the cell in which the node is configured.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Delete Application Server</h3>
<p>To Delete Application Server in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/DeleteApplicationServer/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/DeleteApplicationServer/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/DeleteApplicationServer/PipelineResult.png" />
<br />In the <b>DeleteApplicationServer</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/DeleteApplicationServer/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="CreateApplicationServerTemplate">
        <h2>CreateApplicationServerTemplate</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>This procedure creates a template of an existing Application Server.</p>
        
        
        <h3>CreateApplicationServerTemplate Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Node Name</td>
                <td>Name of the node where application server is located.</td>
            </tr>
            
            <tr>
                <td class="required">Application Server Name</td>
                <td>Name of the application server the template will be based out of.</td>
            </tr>
            
            <tr>
                <td class="required">Template Name</td>
                <td>Application server template name to be created.</td>
            </tr>
            
            <tr>
                <td >Template Location</td>
                <td>
            Specifies a configuration Id that represents the location to place the template.
        </td>
            </tr>
            
            <tr>
                <td >Template Description</td>
                <td>Description of application server template.</td>
            </tr>
            
            <tr>
                <td >Sync Nodes?</td>
                <td>
            The syncNode command forces a configuration synchronization to occur between the node and the deployment manager for the cell in which the node is configured.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Create Application Server Template</h3>
<p>To Create Application Server Template in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/CreateApplicationServerTemplate/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/CreateApplicationServerTemplate/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/CreateApplicationServerTemplate/PipelineResult.png" />
<br />In the <b>CreateApplicationServerTemplate</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/CreateApplicationServerTemplate/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="DeleteApplicationServerTemplate">
        <h2>DeleteApplicationServerTemplate</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>This procedure deletes an existing Application Server Template.</p>
        
        
        <h3>DeleteApplicationServerTemplate Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Template Name</td>
                <td>Application server template name to be deleted.</td>
            </tr>
            
            <tr>
                <td >Sync Nodes?</td>
                <td>
            The syncNode command forces a configuration synchronization to occur between the node and the deployment manager for the cell in which the node is configured.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Delete Application Server Template</h3>
<p>To Delete Application Server Template in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/DeleteApplicationServerTemplate/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/DeleteApplicationServerTemplate/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/DeleteApplicationServerTemplate/PipelineResult.png" />
<br />In the <b>DeleteApplicationServerTemplate</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/DeleteApplicationServerTemplate/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="CreateCluster">
        <h2>CreateCluster</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>Creates a new Application Server cluster.</p>
        
        
            <p>This procedure creates a cluster, adds members to it, and can deploy an application in it using a Jython script.</p>

        
        <h3>CreateCluster Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>Name of the new cluster.</td>
            </tr>
            
            <tr>
                <td class="required">Prefer Local?</td>
                <td>Specifies whether enterprise bean requests are routed to the node on which
        the client resides whenever such a routing is possible.</td>
            </tr>
            
            <tr>
                <td >Create First Cluster Member?</td>
                <td>If not checked, empty cluster will be created</td>
            </tr>
            
            <tr>
                <td >First Cluster Member Creation Policy</td>
                <td>
            Controls how 1st cluster member is to be created
            Existing - use existing server as template
            Convert - convert existing server to 1st cluster member
            Template - use app server template to create 1st cluster member
        </td>
            </tr>
            
            <tr>
                <td >Source Template Name</td>
                <td>
            Name of server template to be the source for first cluster member.
        </td>
            </tr>
            
            <tr>
                <td >Source Server Name</td>
                <td>
            Name of application server to be the source for a new server in format nodename:servername.
        </td>
            </tr>
            
            <tr>
                <td >First Cluster Member Node</td>
                <td>Node name where first cluster member will be created.</td>
            </tr>
            
            <tr>
                <td >First Cluster Member Name</td>
                <td>Name of the server that will be created as a first cluster member.</td>
            </tr>
            
            <tr>
                <td >First Cluster Member Weight</td>
                <td>Weight of first cluster member.</td>
            </tr>
            
            <tr>
                <td >Generate Unique Ports for First Cluster Member?</td>
                <td>
            By default ports generated during for first cluster member creation will be created uniquely.
            If not checked ports in template will be used as is for server creation.
        </td>
            </tr>
            
            <tr>
                <td >Server Resources Promotion Policy</td>
                <td>
            Specifies how resources such as data sources are initially created in the cluster.
            Create settings at the cluster scope if the settings can be used across the entire cluster.
            Otherwise, create settings at the cluster member (server) level.
            Creating settings at the cluster scope reduces the amount of configuration that you maintain.
            Default is Cluster.
        </td>
            </tr>
            
            <tr>
                <td >Add Cluster Members?</td>
                <td>If checked, additional cluster members will be added right after cluster creation.</td>
            </tr>
            
            <tr>
                <td >Gen Unique Ports for Cluster Members?</td>
                <td>
            By default ports generated during cluster members creation will be created uniquely.
            If not checked ports in template will be used as is for server creation.
        </td>
            </tr>
            
            <tr>
                <td >Weight of Each Cluster Member</td>
                <td>
            Weight of each cluster member from list.
        </td>
            </tr>
            
            <tr>
                <td >Cluster Members List</td>
                <td>
            List of cluster members to be created in format NodeName:server1, NodeName2:server2.
        </td>
            </tr>
            
            <tr>
                <td >Sync Nodes?</td>
                <td>
            The syncNode command forces a configuration synchronization to occur between the node and the deployment manager for the cell in which the node is configured.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Create Cluster</h3>
<p>To Create Cluster in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/CreateCluster/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/CreateCluster/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/CreateCluster/PipelineResult.png" />
<br />In the <b>CreateCluster</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/CreateCluster/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="DeleteCluster">
        <h2>DeleteCluster</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>Deletes an existing cluster using the wsadmin tool</p>
        
        
            <p>This procedure delete the specified cluster.</p>

        
        <h3>DeleteCluster Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>The name of the cluster to delete.</td>
            </tr>
            
            <tr>
                <td >Sync Nodes?</td>
                <td>
            The syncNode command forces a configuration synchronization to occur between the node and the deployment manager for the cell in which the node is configured.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Delete Cluster</h3>
<p>To Delete Cluster in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/DeleteCluster/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/DeleteCluster/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/DeleteCluster/PipelineResult.png" />
<br />In the <b>DeleteCluster</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/DeleteCluster/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="ExportApplicationServer">
        <h2>ExportApplicationServer</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>This procedure exports the definition of an Application Server in an environment to an archive (with extension .car) in the filesystem, that can in turn be used import into another environment and create an identical server.</p>
        
        
        <h3>ExportApplicationServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Node Name</td>
                <td>Name of application server node.</td>
            </tr>
            
            <tr>
                <td class="required">Application Server Name</td>
                <td>Name of the application server to be exported.</td>
            </tr>
            
            <tr>
                <td class="required">Archive</td>
                <td>Specifies the fully qualified path of the exported configuration archive.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Export Application Server</h3>
<p>To Export Application Server in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/ExportApplicationServer/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/ExportApplicationServer/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/ExportApplicationServer/PipelineResult.png" />
<br />In the <b>ExportApplicationServer</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/ExportApplicationServer/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="ImportApplicationServer">
        <h2>ImportApplicationServer</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>This procedure imports an Application Server from an Archive and creates an identical server in the environment the Archive is imported into.</p>
        
        
        <h3>ImportApplicationServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Node Name</td>
                <td>Name of the Node in which the Application Server is to be Imported.</td>
            </tr>
            
            <tr>
                <td class="required">Application Server Name</td>
                <td>Name of the Application Server to be created based on the server in the Imported Archive.</td>
            </tr>
            
            <tr>
                <td class="required">Archive</td>
                <td>Specifies the fully qualified path of the configuration archive.</td>
            </tr>
            
            <tr>
                <td >Node Name in Archive</td>
                <td>
            Specifies the node name of the server defined in the configuration archive.
            Not required if there is only one Node in the Archive to be imported.
            If there are multiple nodes in the Archive, mention the node name of the Server to be imported.
        </td>
            </tr>
            
            <tr>
                <td >Server Name in Archive</td>
                <td>
            Specifies the name of the server defined in the configuration archive.
            Not required if there is only one Server in the Archive to be imported.
            If there are multiple servers in the Archive, mention the name of the Server to be imported.
        </td>
            </tr>
            
            <tr>
                <td >Core Group</td>
                <td>Specifies the core group name to which the server should belong.</td>
            </tr>
            
            <tr>
                <td >Sync Nodes?</td>
                <td>
            The syncNode command forces a configuration synchronization to occur between the node and the deployment manager for the cell in which the node is configured.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Import Application Server</h3>
<p>To Import Application Server in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/ImportApplicationServer/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/ImportApplicationServer/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/ImportApplicationServer/PipelineResult.png" />
<br />In the <b>ImportApplicationServer</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/ImportApplicationServer/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="ListClusterMembers">
        <h2>ListClusterMembers</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>Lists all the members of cluster using wsadmin tool.</p>
        
        
            <p>This procedure lists down all the members (application servers) of the cluster using a Jython script.</p>

        
        <h3>ListClusterMembers Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>Name of the cluster of which members to list down.</td>
            </tr>
            
            <tr>
                <td >Output Property Path</td>
                <td>Property where cluster members list is to be stored.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>List Cluster Members</h3>
<p>To List Cluster Members in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/ListClusterMembers/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/ListClusterMembers/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/ListClusterMembers/PipelineResult.png" />
<br />In the <b>ListClusterMembers</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/ListClusterMembers/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="RemoveClusterMembers">
        <h2>RemoveClusterMembers</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>Removes list of application servers from existing cluster</p>
        
        
            <p>This procedure removes specified application servers from the cluster using a Jython script.</p>

        
        <h3>RemoveClusterMembers Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>Name of cluster from which to remove/delete the members. </td>
            </tr>
            
            <tr>
                <td class="required">List of Cluster Members</td>
                <td>
            List of cluster members in the form Node01:server1, Node02:server2 to remove/delete from cluster.
            Important note: server will be not only removed from cluster, but also deleted.
        </td>
            </tr>
            
            <tr>
                <td >Sync Nodes?</td>
                <td>
            The syncNode command forces a configuration synchronization to occur between the node and the deployment manager for the cell in which the node is configured.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Remove Cluster Members</h3>
<p>To Remove Cluster Members in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/RemoveClusterMembers/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/RemoveClusterMembers/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/RemoveClusterMembers/PipelineResult.png" />
<br />In the <b>RemoveClusterMembers</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/RemoveClusterMembers/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="SyncNodes">
        <h2>SyncNodes</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>Synchronizes active nodes.</p>
        
        
            <p>Synchronizes Cell's Deployment Manager config repository with nodes of the cell. By default, WebSphere nodes are configured for auto-sync.
This procedure should be used for manual nodes synchronization.
For example: New custom property for node was added, and configuration was saved.
Next, to make it available on each server it should be propagated to all servers of the node by nodes synchronization.</p>

        
        <h3>SyncNodes Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Path</td>
                <td>Path to wsadmin. If the location of wsadmin is in the PATH environment variable, then just the script name can be specified omitting its full path. E.g. '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    
    <div id="CreateFirstClusterMember">
        <h2>CreateFirstClusterMember</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>Creates first cluster member</p>
        
        
        <h3>CreateFirstClusterMember Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>Name of the new cluster.</td>
            </tr>
            
            <tr>
                <td class="required">First Cluster Member Name</td>
                <td>Name of the server that will be a first cluster member.</td>
            </tr>
            
            <tr>
                <td class="required">First Cluster Member Node</td>
                <td>
            Name of the server that will be created as a first cluster member.
        </td>
            </tr>
            
            <tr>
                <td >First Cluster Member Weight</td>
                <td>Weight of each cluster member from list.</td>
            </tr>
            
            <tr>
                <td >Generate Unique Ports for First Cluster Member?</td>
                <td>
            By default ports generated during for first cluster member creation will be created uniquely.
            If not checked ports in template will be used as is for server creation.
        </td>
            </tr>
            
            <tr>
                <td class="required">Server Resources Promotion Policy</td>
                <td>
            Specifies how resources such as data sources are initially created in the cluster.
            Create settings at the cluster scope if the settings can be used across the entire cluster.
            Otherwise, create settings at the cluster member (server) level.
            Creating settings at the cluster scope reduces the amount of configuration that you maintain.
            Default is Cluster.
        </td>
            </tr>
            
            <tr>
                <td class="required">First Cluster Member Creation Policy</td>
                <td>
            Controls how 1st cluster member is to be created?
            Existing - use existing server as template
            Template - use app server template to create 1st cluster member
        </td>
            </tr>
            
            <tr>
                <td >Source Template Name</td>
                <td>
            Name of server template to be the source for first cluster member.
        </td>
            </tr>
            
            <tr>
                <td >Source Server Name</td>
                <td>
            Name of application server to be the source for a new server in format nodename:servername.
        </td>
            </tr>
            
            <tr>
                <td >Sync Nodes?</td>
                <td>
            The syncNode command forces a configuration synchronization to occur between the node and the deployment manager for the cell in which the node is configured.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Create First Cluster Member</h3>
<p>To Create First Cluster Member in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/CreateFirstClusterMember/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/CreateFirstClusterMember/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/CreateFirstClusterMember/PipelineResult.png" />
<br />In the <b>CreateFirstClusterMember</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/CreateFirstClusterMember/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="CreateClusterMembers">
        <h2>CreateClusterMembers</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>Creates cluster members </p>
        
        
        <h3>CreateClusterMembers Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>A name of the cluster where servers is to be created.</td>
            </tr>
            
            <tr>
                <td class="required">Gen Unique Ports?</td>
                <td>Generate unique ports number if checked.</td>
            </tr>
            
            <tr>
                <td >Cluster Member Weight</td>
                <td>Weight of each cluster member</td>
            </tr>
            
            <tr>
                <td class="required">List of the Cluster Members</td>
                <td>List of the cluster members</td>
            </tr>
            
            <tr>
                <td >Sync Nodes?</td>
                <td>
            The syncNode command forces a configuration synchronization to occur between the node and the deployment manager for the cell in which the node is configured.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Create Cluster Members</h3>
<p>To Create Cluster Members in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/CreateClusterMembers/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/CreateClusterMembers/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/CreateClusterMembers/PipelineResult.png" />
<br />In the <b>CreateClusterMembers</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/CreateClusterMembers/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="StartApplicationServers">
        <h2>StartApplicationServers</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>This procedure starts one or more Application Servers that can be spread across nodes.</p>
        
        
        <h3>StartApplicationServers Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Server List</td>
                <td>
            List of Servers to be started. Provide them in this format :  NodeName:ServerName. For example, 
            Node1:Server1, Node2:Server2, Node3:Server3, or Node4:* to start all servers within Node4.
        </td>
            </tr>
            
            <tr>
                <td >Wait time</td>
                <td>Not Required. Time to wait until all servers are started. If not specified wait time will be treated as 0.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Start Application Servers</h3>
<p>To Start Application Servers in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StartApplicationServers/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StartApplicationServers/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/StartApplicationServers/PipelineResult.png" />
<br />In the <b>StartApplicationServers</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/StartApplicationServers/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="StopApplicationServers">
        <h2>StopApplicationServers</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>This procedure stops one or more Application Servers that can be spread across nodes.</p>
        
        
        <h3>StopApplicationServers Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Server List</td>
                <td>
            List of Servers to be stopped. Provide them in this format :  NodeName:ServerName. For example, 
            Node1:Server1, Node2:Server2, Node3:Server3, or Node4:* to stop all servers within Node4.
        </td>
            </tr>
            
            <tr>
                <td >Wait time</td>
                <td>Not Required. Time to wait until all servers are stopped. If not specified wait time will be treated as 0.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Stop Application Servers</h3>
<p>To Stop Application Servers in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StopApplicationServers/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StopApplicationServers/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/StopApplicationServers/PipelineResult.png" />
<br />In the <b>StopApplicationServers</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/StopApplicationServers/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="StartCluster">
        <h2>StartCluster</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>Starts cluster using wsadmin tool.</p>
        
        
            <p>This procedure starts a cluster.</p>

        
        <h3>StartCluster Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>Name of the cluster to be started.</td>
            </tr>
            
            <tr>
                <td >Timeout</td>
                <td>
            Specifies the waiting time before cluster start times out and returns an error.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Start Cluster</h3>
<p>To Start Cluster in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StartCluster/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StartCluster/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/StartCluster/PipelineResult.png" />
<br />In the <b>StartCluster</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/StartCluster/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="StopCluster">
        <h2>StopCluster</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>Stops cluster using wsadmin tool.</p>
        
        
            <p>This procedure stops a cluster.</p>

        
        <h3>StopCluster Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Cluster Name</td>
                <td>Name of the cluster to be stopped. </td>
            </tr>
            
            <tr>
                <td >Timeout</td>
                <td>
            Specifies the waiting time before cluster stop times out and returns an error.
        </td>
            </tr>
            
            <tr>
                <td >Perform Ripple Start?</td>
                <td>If checked, all servers within cluster will be stopped one-by-one and then started.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Stop Cluster</h3>
<p>To Stop Cluster in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StopCluster/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StopCluster/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/StopCluster/PipelineResult.png" />
<br />In the <b>StopCluster</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/StopCluster/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="StartDeploymentManager">
        <h2>StartDeploymentManager</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>This procedure starts the Deployment Manager in a WAS network deployment.</p>
        
        
        <h3>StartDeploymentManager Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">StartManager Location</td>
                <td>Absolute Physical path in Filesystem to location of startManager script i.e., /path/to/startManager.sh or startManager.bat</td>
            </tr>
            
            <tr>
                <td >Deployment Manager Profile</td>
                <td>
            Profile name of the DeploymentManager which needs to be started.
            If this is not provided StartManager will start the DeploymentManager which has the default profile.
        </td>
            </tr>
            
            <tr>
                <td >Log File Location</td>
                <td>Absolute Physical path in Filesystem to location of startManager.sh logs i.e., /path/to/startServer.log</td>
            </tr>
            
            <tr>
                <td >Timeout</td>
                <td>Specifies the waiting time before deployment manager start times out and returns an error.</td>
            </tr>
            
            <tr>
                <td >Additional Parameters</td>
                <td>
            This parameter can be used to either override defaults or pass Custom Properties. For example: -quiet, -nowait, -help.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Start Deployment Manager</h3>
<p>To Start Deployment Manager in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StartDeploymentManager/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StartDeploymentManager/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/StartDeploymentManager/PipelineResult.png" />
<br />In the <b>StartDeploymentManager</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/StartDeploymentManager/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="StopDeploymentManager">
        <h2>StopDeploymentManager</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>Stops Deployment Manager</p>
        
        
        <h3>StopDeploymentManager Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">StopManager Location</td>
                <td>Absolute Physical path in Filesystem to location of stopManager script i.e., /path/to/stopManager.sh or stopManager.bat</td>
            </tr>
            
            <tr>
                <td >Deployment Manager Profile</td>
                <td>
            Profile name of the DeploymentManager which needs to be stopped.
            If this is not provided StopManager will stop the DeploymentManager which has the default profile.
        </td>
            </tr>
            
            <tr>
                <td >Log File Location</td>
                <td>Absolute Physical path in Filesystem to location of stopManager.sh logs i.e., /path/to/stopServer.log</td>
            </tr>
            
            <tr>
                <td >Timeout</td>
                <td>Specifies the waiting time before deployment manager stop times out and returns an error.</td>
            </tr>
            
            <tr>
                <td >Additional Parameters</td>
                <td>
            This parameter can be used to either override defaults or pass Custom Properties. For example: -quiet, -nowait, -help.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Stop Deployment Manager</h3>
<p>To Stop Deployment Manager in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StopDeploymentManager/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StopDeploymentManager/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/StopDeploymentManager/PipelineResult.png" />
<br />In the <b>StopDeploymentManager</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/StopDeploymentManager/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="StartNode">
        <h2>StartNode</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>This procedure starts a WAS node and optionally starts all Application Servers in that Node.</p>
        
        
        <h3>StartNode Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">StartNode Location</td>
                <td>Absolute Physical path in Filesystem to location of startNode script i.e., /path/to/startNode.sh or startNode.bat</td>
            </tr>
            
            <tr>
                <td >Node Profile</td>
                <td>
            Profile name of the Node which needs to be started.
            If this is not provided StartNode will start the Node which has the default profile.
        </td>
            </tr>
            
            <tr>
                <td >Log File Location</td>
                <td>Absolute Physical path in Filesystem to location of startNode.sh logs i.e., /path/to/startServer.log</td>
            </tr>
            
            <tr>
                <td >Timeout</td>
                <td>Specifies the waiting time before node start times out and returns an error.</td>
            </tr>
            
            <tr>
                <td >Start all Application Servers?</td>
                <td>Start all application servers within node after nodeagent is started.</td>
            </tr>
            
            <tr>
                <td >Node Name to start Servers</td>
                <td>Name of the node where application servers needs to be started.</td>
            </tr>
            
            <tr>
                <td >Additional Parameters</td>
                <td>
            This parameter can be used to either override defaults or pass Custom Properties. For example: -quiet, -nowait, -help.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Start Node</h3>
<p>To Start Node in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StartNode/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StartNode/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/StartNode/PipelineResult.png" />
<br />In the <b>StartNode</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/StartNode/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="StopNode">
        <h2>StopNode</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>This procedure stops a WAS node and stops the Application Servers in that Node based on the Stop Node policy.</p>
        
        
        <h3>StopNode Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">StopNode Location</td>
                <td>Absolute Physical path in Filesystem to location of stopNode script i.e., /path/to/stopNode.sh or stopNode.bat</td>
            </tr>
            
            <tr>
                <td >Node Profile</td>
                <td>
            Profile name of the Node which needs to be stopped.
            If this is not provided StopNode will stop the Node which has the default profile.
        </td>
            </tr>
            
            <tr>
                <td >Log File Location</td>
                <td>Absolute Physical path in Filesystem to location of stopNode.sh logs i.e., /path/to/stopServer.log</td>
            </tr>
            
            <tr>
                <td >Timeout</td>
                <td>Specifies the waiting time before node stop times out and returns an error.</td>
            </tr>
            
            <tr>
                <td >Node Stop Policy</td>
                <td>Policy that will be used for node stopping. It could be one of: Just Stop node agent, stop Spplication Servers, Save Node State.</td>
            </tr>
            
            <tr>
                <td >Additional Parameters</td>
                <td>
            This parameter can be used to either override defaults or pass Custom Properties. For example: -quiet, -nowait, -help.
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Stop Node</h3>
<p>To Stop Node in Flow interface, do these steps:</p>
<ul>
<li>Create Pipeline.</li>
<li>Create task.</li>
<li>In task definition choose Plugin and choose following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StopNode/PipelinePicker.png" /></li>
<li>Click on arrow.</li>
<li>Enter the following parameters:
<br /><img src="../../plugins/EC-WebSphere/images/StopNode/PipelineConfig.png" /></li>
</ul>
<p>After the pipeline runs, you can view the results, including the following step details:
<br /><img src="../../plugins/EC-WebSphere/images/StopNode/PipelineResult.png" />
<br />In the <b>StopNode</b> step, click the Log icon to see the diagnostic information. The output is similar to the following diagnostic report.
<br /><img src="../../plugins/EC-WebSphere/images/StopNode/PipelineLog.png" /></p>

        </p>
        
    </div>

    
    <div id="StartServer">
        <h2>StartServer</h2>
        
        
        <p>Starts a WebSphere instance</p>
        
        
            <p>This procedure starts a WebSphere instance or an application server using startServer.sh.</p>

        
        <h3>StartServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">StartServer Absolute Path</td>
                <td>Absolute path of the start server script, including filename and extension. i.e: 'startServer.bat' or '/path/to/startServer.sh' or 'C:\Program Files\IBM\WebSphere\AppServer\bin\startServer.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">Instance name</td>
                <td>The name of the instance of the server to be started. i.e: 'server01'. </td>
            </tr>
            
            <tr>
                <td >Additional Commands</td>
                <td>Additional commands to be entered for the startup of the server.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    
    <div id="StopServer">
        <h2>StopServer</h2>
        
        
        <p>Stops a WebSphere instance</p>
        
        
            <p>This procedure stops a WebSphere instance or an application server using stopServer.sh</p>

        
        <h3>StopServer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td >Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Script Location</td>
                <td>Absolute path of the stop server script, including filename and extension. i.e: 'C:/Program Files/IBM/WebSphere/AppServer/bin/stopServer.bat', 'stopServer.bat', '/path/to/stopServer.sh'</td>
            </tr>
            
            <tr>
                <td class="required">Instance Name</td>
                <td>Server instance name of the server to be stopped. i.e: 'server01'. </td>
            </tr>
            
            <tr>
                <td >Additional Commands</td>
                <td>Additional commands to be entered for stop the server.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    
    <div id="RunCustomJob">
        <h2>RunCustomJob</h2>
        
        
        <p>Runs a task using wsadmin</p>
        
        
            <p>This procedure runs a task using wsadmin and the Jython code files.</p>

        
        <h3>RunCustomJob Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td >Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td >Wsadmin Absolute Path</td>
                <td>Absolute path of wsadmin, including filename and extension. If the path in which wsadmin is stored in the path environmental variable, the absolute path is ommited. i.e: '/path/to/wsadmin.sh' or 'wsadmin.bat'. </td>
            </tr>
            
            <tr>
                <td >Commands</td>
                <td>Commands to be entered to wsadmin. Use one command per line.</td>
            </tr>
            
            <tr>
                <td >Java Parameters</td>
                <td>Java options to be passed to wsadmin, separate them using semicolons (;).</td>
            </tr>
            
            <tr>
                <td >Classpath</td>
                <td>Jars to be passed to the wsadmin classpath. It is a string containing paths (semicolon-separated) the required JARs to execute wsadmin in a particular job. i.e: 'c:/MyDir/Myjar.jar;d:/yourdir/yourdir.jar' or '/MyDir/Myjar.jar;/yourdir/yourdir.jar'.</td>
            </tr>
            
            <tr>
                <td >Script File Absolute Path</td>
                <td>Path of a Jython script that will be run using wsadmin. i.e: '/path/to/scriptFile.jython' or 'c:/dir/scriptFile.jython'.</td>
            </tr>
            
            <tr>
                <td class="required">Script File Source</td>
                <td>Indicates either if a script file route or an embedded script file will be provided. </td>
            </tr>
            
            <tr>
                <td >Script File</td>
                <td>Content of the script file to run if Embedded File is chosen in the Script File Source.</td>
            </tr>
            
            <tr>
                <td >Additional Commands</td>
                <td>Additional commands to be entered for wsadmin.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Running Custom Jobs</h3>
                <p>For a complete example, go to the <i>Examples and Use Cases</i> section.</p>

        </p>
        
    </div>

    
    <div id="ConfigureSession">
        <h2>ConfigureSession</h2>
        
        
        <p>Configures the session management properties for the deployed application.</p>
        
        
            <p>This procedure configures the session management related properties for deployed application. For more information on each of the parameter, please refer to the <a href="http://www-01.ibm.com/support/knowledgecenter/SSCKBL_8.5.5/com.ibm.websphere.nd.doc/ae/uprs_rsession_manager.html">WebSphere Knowledge Center Page.</a></p>

        
        <h3>ConfigureSession Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Absolute Path</td>
                <td>Path to wsadmin. If the location of wsadmin is in the PATH environment variable, then just the script name can be specified omitting its full path. E.g. /path/to/wsadmin.sh or wsadmin.bat.</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name of the web application to configure. </td>
            </tr>
            
            <tr>
                <td >Enable SSL Tracking</td>
                <td>Specifies that session tracking uses Secure Sockets Layer (SSL) information as a session ID. Enabling SSL tracking takes precedence over cookie-based session tracking and URL rewriting.</td>
            </tr>
            
            <tr>
                <td >Enable Cookies</td>
                <td>Specifies whether to enable cookies.</td>
            </tr>
            
            <tr>
                <td >Enable URL Rewriting</td>
                <td>Specifies whether the session management facility uses rewritten URLs to carry the session IDs. If URL rewriting is enabled, the session management facility recognizes session IDs that arrive in the URL if the encodeURL method is called in the servlet.</td>
            </tr>
            
            <tr>
                <td >Enable Protocol Switching</td>
                <td>This option is only applicable when Enable URL rewriting is selected. This option specifies that the session ID is added to a URL when the URL requires a switch from HTTP to HTTPS or from HTTPS to HTTP. If rewriting is enabled, the session ID is required to go between HTTP and HTTPS.</td>
            </tr>
            
            <tr>
                <td class="required">Max in-memory session count</td>
                <td>Specifies the maximum number of sessions to maintain in memory.</td>
            </tr>
            
            <tr>
                <td >Allow Overflow</td>
                <td>Specifies whether the number of sessions in memory can exceed the value specified by the Max in-memory session count property. This option is valid only in non-distributed sessions mode..</td>
            </tr>
            
            <tr>
                <td >Enable Serialized Session</td>
                <td>If selected, concurrent session access in a given server is not permitted.</td>
            </tr>
            
            <tr>
                <td class="required">Maximum Wait Time</td>
                <td>Specifies the maximum amount of time in seconds a servlet request waits on an HTTP session before continuing execution. The default is 5 seconds. Under normal conditions, a servlet request waiting for access to an HTTP session gets notified by the request that currently owns the given HTTP session when the request finishes.</td>
            </tr>
            
            <tr>
                <td >Access Session On Timeout</td>
                <td>Specifies whether the servlet is started normally or aborted in the event of a timeout. If you specify true, the servlet is started normally. If you specify false, the servlet execution aborts and error logs are generated.</td>
            </tr>
            
            <tr>
                <td class="required">Invalid Timeout</td>
                <td>Specifies how long(in minutes) a session can go unused before it is no longer valid.</td>
            </tr>
            
            <tr>
                <td >Session Persistence Mode</td>
                <td>Specifies whether to enable session persistence mode.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Configure Session Management for application</h3>
                <p>To Configure Session Management for application, do these steps:</p>
                <ol>
                    <li>Go to the ConfigureSession procedure.</li>
                    <li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/ConfigureSession/EC-WebSphereConfigureSession2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details, which show that
                the cluster was created successfully:</p>
                <img src="../../plugins/EC-WebSphere/images/ConfigureSession/EC-WebSphereConfigureSession3.png" />
                <p>In the <b>ConfigureSession</b> step, click the Log icon
                to see the diagnostic information. The output is similar to
                the following diagnostic
                report.</p>
                <img src="../../plugins/EC-WebSphere/images/ConfigureSession/EC-WebSphereConfigureSession4.png" />

        </p>
        
    </div>

    
    <div id="MapSharedLibrary">
        <h2>MapSharedLibrary</h2>
        
        
        <p>Maps shared library.</p>
        
        
            <p>This procedure maps shared library to already deployed application.</p>

        
        <h3>MapSharedLibrary Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Absolute Path</td>
                <td>Path to wsadmin. If the location of wsadmin is in the PATH environment variable, then just the script name can be specified omitting its full path. E.g. '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">Library Name</td>
                <td>Shared Library Name.</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name of application to which shared library will be mapped.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Map Shared Library to Application</h3>
                <p>To map shared library to application, do these steps:</p>
                <ol>
                    <li>Go to the MapSharedLibrary procedure. </li>
                    <li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/MapSharedLibrary/EC-WebSphereMapSharedLibrary2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details:</p>
                <img src="../../plugins/EC-WebSphere/images/MapSharedLibrary/EC-WebSphereMapSharedLibrary3.png" />
                <p>In the <b>MapSharedLibrary</b> step, click the Log icon
                to see the diagnostic information. The output is similar to
                the following diagnostic
                report.</p>
                <img src="../../plugins/EC-WebSphere/images/MapSharedLibrary/EC-WebSphereMapSharedLibrary4.png" />

        </p>
        
    </div>

    
    <div id="ModifyApplicationClassLoader">
        <h2>ModifyApplicationClassLoader</h2>
        
        
        <p>Modify Application ClassLoader.</p>
        
        
            <p>This procedure modifies ClassLoader of the deployed Application.</p>

        
        <h3>ModifyApplicationClassLoader Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Path</td>
                <td>Path to wsadmin. If the location of wsadmin is in the PATH environment variable, then just the script name can be specified omitting its full path. E.g. '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">Load Order</td>
                <td>The class-loader delegation mode, also known as the class loader order, determines whether a class loader delegates the loading of classes to the parent class loader.</td>
            </tr>
            
            <tr>
                <td class="required">ClassLoader Isolation Policy</td>
                <td>Application class loaders load EJB modules, dependency JAR files, embedded resource adapters, and application-scoped shared libraries. Depending on the application class-loader policy, an application class loader can be shared by multiple applications (Single) or unique for each application (Multiple). The application class-loader policy controls the isolation of applications that are running in the system. When set to Single, applications are not isolated. When set to Multiple, applications are isolated from each other.</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name of the existing web application, which ClassLoader should be modified.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Modify Application's ClassLoader</h3>
                <p>To modify Application's ClassLoader do the following steps:</p>
                <ol>
                    <li>Go to the ModifyApplicationClassLoader  procedure. </li>
                    <li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/ModifyApplicationClassLoader/EC-WebSphereModifyApplicationClassLoader2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details:</p>
                <img src="../../plugins/EC-WebSphere/images/ModifyApplicationClassLoader/EC-WebSphereModifyApplicationClassLoader3.png" />
                <p>In the <b>ModifyApplicationClassLoader</b> step, click the Log icon
                to see the diagnostic information. The output is similar to
                the following diagnostic
                report.</p>
                <img src="../../plugins/EC-WebSphere/images/ModifyApplicationClassLoader/EC-WebSphereModifyApplicationClassLoader4.png" />

        </p>
        
    </div>

    
    <div id="StartApp">
        <h2>StartApp</h2>
        
        
        <p>Start an application using wsadmin</p>
        
        
            <p>This procedure starts an application using wsadmin. If the application is already running, a warning will be thrown.</p>

        
        <h3>StartApp Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td >Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Absolute Path</td>
                <td>Absolute path of wsadmin, including filename and extension. If the path in which wsadmin is stored in the path environmental variable, the absolute path is ommited. i.e: '/path/to/wsadmin.sh' or 'wsadmin.bat'. </td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name of the application to start. i.e: 'webapp'. </td>
            </tr>
            
            <tr>
                <td >Cluster Name</td>
                <td>Name of the cluster on which application is deployed. Not required in WebSphere Base Edition.</td>
            </tr>
            
            <tr>
                <td >Server Name</td>
                <td>Name of the server on which application is deployed. Specify server in the form Node=server. For e.g. Node01=Server1. Not required in WebSphere Base Edition.</td>
            </tr>
            
            <tr>
                <td >Commands</td>
                <td>Commands to be entered to wsadmin. Use one command per line.</td>
            </tr>
            
            <tr>
                <td >Java Parameters</td>
                <td>Java options to be passed to wsadmin, separate them using semicolons (;).</td>
            </tr>
            
            <tr>
                <td >Classpath</td>
                <td>Jars to be passed to the wsadmin classpath. It is a string containing paths (semicolon-separated) the required JARs to execute wsadmin in a particular job. i.e: 'c:/MyDir/Myjar.jar;d:/yourdir/yourdir.jar' or '/MyDir/Myjar.jar;/yourdir/yourdir.jar'.</td>
            </tr>
            
            <tr>
                <td >Additional Commands</td>
                <td>Additional commands to be entered for wsadmin.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Starting Applications</h3>
                <p>To start an application, do these steps:</p>
                <ol>
                    <li>Go to the StartApp procedure.</li>
                    <li>Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/StartApp/startApp2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details,
                which show that application was started
                successfully:</p><img src="../../plugins/EC-WebSphere/images/StartApp/startApp3.png" />
                <p>In the <b>StartApp</b> step, click the Log icon to
                see the diagnostic information. The output is similar to the
                following diagnostic
                report.</p><img src="../../plugins/EC-WebSphere/images/StartApp/startApp4.png" />

        </p>
        
    </div>

    
    <div id="StopApp">
        <h2>StopApp</h2>
        
        
        <p>Stop an application using wsadmin</p>
        
        
            <p>This procedure stops an application using wsadmin. If the application is already stopped, a warning will be thrown.</p>

        
        <h3>StopApp Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td >Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td >Wsadmin Absolute Path</td>
                <td>Absolute path of wsadmin, including filename and extension. If the path in which wsadmin is stored in the path environmental variable, the absolute path is ommited. i.e: '/path/to/wsadmin.sh' or 'wsadmin.bat'. </td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name of the application to stop. i.e: 'webapp'. </td>
            </tr>
            
            <tr>
                <td >Cluster Name</td>
                <td>Name of the cluster on which application is deployed. Not required in WebSphere Base Edition.</td>
            </tr>
            
            <tr>
                <td >Server Name</td>
                <td>Name of the server on which application is deployed. Specify server in the form Node=server. For e.g. Node01=Server1. Not required in WebSphere Base Edition.</td>
            </tr>
            
            <tr>
                <td >Commands</td>
                <td>Commands to be entered to wsadmin. Use one command per line.</td>
            </tr>
            
            <tr>
                <td >Java Parameters</td>
                <td>Java options to be passed to wsadmin, separate them using semicolons (;).</td>
            </tr>
            
            <tr>
                <td >Classpath</td>
                <td>Jars to be passed to the wsadmin classpath. It is a string containing paths (semicolon-separated) the required JARs to execute wsadmin in a particular job. i.e: 'c:/MyDir/Myjar.jar;d:/yourdir/yourdir.jar' or '/MyDir/Myjar.jar;/yourdir/yourdir.jar'.</td>
            </tr>
            
            <tr>
                <td >Additional Commands</td>
                <td>Additional commands to be entered for wsadmin.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Stopping Applications</h3>
                <p>To stop an application, do these steps:</p>
                <ol>
                    <li>Go to the StopApp procedure.</li>
                    <li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/StopApp/stopApp2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details, which show that
                the application was stoped
                successfully: </p><img src="../../plugins/EC-WebSphere/images/StopApp/stopApp3.png" />
                <p>In the <b>StopApp</b> step, click the Log icon to
                see the diagnostic information. The output is similar to the
                following diagnostic
                report. </p><img src="../../plugins/EC-WebSphere/images/StopApp/stopApp4.png" />

        </p>
        
    </div>

    
    <div id="CreateJDBCProvider">
        <h2>CreateJDBCProvider</h2>
        
        
        <p>Creates a JDBC Provider using the wsadmin tool</p>
        
        
            <p>This procedure creates a JDBC provider using a Jython script.</p>

        
        <h3>CreateJDBCProvider Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Absolute Path</td>
                <td>Absolute path of wsadmin, including filename and extension. If the path in which wsadmin is stored in the path environmental variable, the absolute path is ommited. i.e: '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">JDBC Provider Name</td>
                <td>Name of the JDBC Provider.</td>
            </tr>
            
            <tr>
                <td >JDBC Provider Description</td>
                <td>A description for the JDBC Provider.</td>
            </tr>
            
            <tr>
                <td >Cell Scope</td>
                <td>Parent object where the JDBC Provider will be created. This determines the visibility scope of the JDBC Provider. When the Cell Scope is provided, if the node and server scopes are not provided, then the scope will be the 'cell'; if the node is provided and the server not, then the scope will be the 'node'; if the server is provided and the node not, then the scope will be the 'server'. At least the Cell, the Node or the Server scope must be provided. i.e: 'wsaspluginNode01Cell'. </td>
            </tr>
            
            <tr>
                <td >Cluster Scope</td>
                <td>When the Cluster Scope is provided, then the scope will be the cluster. i.e: 'cluster1'.</td>
            </tr>
            
            <tr>
                <td >Node Scope</td>
                <td>When the Node Scope is provided, if the cell and server scopes are not provided, then the scope will be the 'node'; if the cell is provided and the server not, then the scope will be the 'node'; if the server is provided and the cell not, then the scope will be the 'server'. i.e: 'wsaspluginNode01'.</td>
            </tr>
            
            <tr>
                <td >Server Scope</td>
                <td>When the Server Scope is provided, then the scope will be the Node and the server always, even if the Node and the Cell Scopes are not provided. i.e: 'server1'.</td>
            </tr>
            
            <tr>
                <td class="required">Implementation Class Name</td>
                <td>Java class name of the JDBC provider implementation.</td>
            </tr>
            
            <tr>
                <td class="required">Driver Class Path</td>
                <td>A path for the resource provider classes.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Creating a JDBC Providers</h3>
                <p>To create a JDBC provider, do these steps:</p>
                <ol>
                    <li>Go to the CreateJDBCProvider procedure.</li>
                    <!--  <img src="../../plugins/EC-WebSphere/images/CreateJDBCProvider/EC-WebSphereCreateJDBCProvider1.png" /> -->
                    <li>Enter the following parameters:</li>
                    <img src="../../plugins/EC-WebSphere/images/CreateJDBCProvider/EC-WebSphereCreateJDBCProvider2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details,
                which show that JDBC provider was successfully created:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateJDBCProvider/EC-WebSphereCreateJDBCProvider3.png" />
                <p>In the <b>CreateJDBCProvider</b> step, click the Log icon
                to see the diagnostic information. The output is similar to
                the following diagnostic
                report.</p><img src="../../plugins/EC-WebSphere/images/CreateJDBCProvider/EC-WebSphereCreateJDBCProvider4.png" />

        </p>
        
    </div>

    
    <div id="DeleteJDBCProvider">
        <h2>DeleteJDBCProvider</h2>
        
        
        <p>Deletes a JDBC Provider using the wsadmin tool</p>
        
        
            <p>This procedure deletes a JDBC provider using a Jython script.</p>

        
        <h3>DeleteJDBCProvider Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Absolute Path</td>
                <td>Absolute path of wsadmin, including filename and extension. If the path in which wsadmin is stored in the path environmental variable, the absolute path is ommited. i.e: '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">JDBC Provider Name</td>
                <td>A unique name that identifies the JDBC Provider to delete in the WebSphere domain.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Deleting JDBC Providers</h3>
                <p>To delete a JDBC provider, do these steps:</p>
                <ol>
                    <li>Go to the DeleteJDBCProvider procedure. </li>
                    <li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/DeleteJDBCProvider/EC-WebSphereDeleteJDBCProvider2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details, which show that
                the JDBC provider was deleted successfully:</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJDBCProvider/EC-WebSphereDeleteJDBCProvider3.png" />
                <p>In the <b>DeleteJDBCProvider</b> step, click the Log icon
                to see the diagnostic information. The output is similar to
                the following diagnostic
                report.</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJDBCProvider/EC-WebSphereDeleteJDBCProvider4.png" />

        </p>
        
    </div>

    
    <div id="CreateDatasource">
        <h2>CreateDatasource</h2>
        
        
        <p>Creates a datasource using the wsadmin tool. The scope assigned to the datasource is provided by the JDBC Provider.</p>
        
        
            <p>The procedure creates a datasource by using a Jython script.</p>

        
        <h3>CreateDatasource Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Absolute Path</td>
                <td>Absolute path of wsadmin, including filename and extension. If the path in which wsadmin is stored in the path environmental variable, the absolute path is ommited. i.e: '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">JDBC Provider</td>
                <td>Name of an existing JDBC Provider.</td>
            </tr>
            
            <tr>
                <td class="required">Datasource Name</td>
                <td>A unique name that identifies this Datasource in the WebSphere domain. </td>
            </tr>
            
            <tr>
                <td >Datasource Description</td>
                <td>A description for the datasource. </td>
            </tr>
            
            <tr>
                <td class="required">JNDI Name</td>
                <td>The JNDI path to where this Datasource is bound. </td>
            </tr>
            
            <tr>
                <td class="required">Statement Cache Size</td>
                <td>Specifies the number of statements that can be cached per connection. The application server caches a statement after you close that statement. </td>
            </tr>
            
            <tr>
                <td class="required">Authentication Alias Name</td>
                <td>Provide the authentication data alias. </td>
            </tr>
            
            <tr>
                <td class="required">Datasource Helper Class Name</td>
                <td>Provide the datasource helper class name.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <p>To create a datasource, do the following steps:</p>
                <ol>
                    <li>Go to the CreateDataSource procedure.</li>
                    <!--  <img src="../../plugins/EC-WebSphere/images/CreateDatasource/EC-WebSphereCreateDatasource1.png" /> -->
                    <li>Enter the following parameters:</li>
                    <img src="../../plugins/EC-WebSphere/images/CreateDatasource/EC-WebSphereCreateDatasource2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details,
                which show that the datasource was successfully created:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateDatasource/EC-WebSphereCreateDatasource3.png" />
                <p>In the <b>CreateDatasource</b> step, click the Log icon
                to see the diagnostic information. The output is similar to
                the following diagnostic
                report.</p><img src="../../plugins/EC-WebSphere/images/CreateDatasource/EC-WebSphereCreateDatasource4.png" />

        </p>
        
    </div>

    
    <div id="DeleteDatasource">
        <h2>DeleteDatasource</h2>
        
        
        <p>Deletes a datasource using the wsadmin tool</p>
        
        
            <p>This procedure deletes a datasource using a Jython script.</p>

        
        <h3>DeleteDatasource Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Absolute Path</td>
                <td>Absolute path of wsadmin, including filename and extension. If the path in which wsadmin is stored in the path environmental variable, the absolute path is ommited. i.e: '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">Datasource Name</td>
                <td>A unique name that identifies the datasource to delete in the WebSphere domain. </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Deleting Datasources</h3>
<p>To delete a datasource, do these steps:</p>
<ol>
<li>Go to the DeleteDatasource procedure.</li>
<!--  <img src="../../plugins/EC-WebSphere/images/DeleteDatasource/EC-WebSphereDeleteDatasource1.png" /> -->
<li>Enter the following parameters:</li>
<img src="../../plugins/EC-WebSphere/images/DeleteDatasource/EC-WebSphereDeleteDatasource2.png" />
</ol>
<p>After the job runs, you can view the results, including the following job details, which show that the datasource was deleted
successfully:</p><img src="../../plugins/EC-WebSphere/images/DeleteDatasource/EC-WebSphereDeleteDatasource3.png" />
<p>In the <b>DeleteDatasource</b> step, click the Log icon
to see the diagnostic information. The output is similar to
the following diagnostic
report.</p><img src="../../plugins/EC-WebSphere/images/DeleteDatasource/EC-WebSphereDeleteDatasource4.png" />

        </p>
        
    </div>

    
    <div id="CreateJMSProvider">
        <h2>CreateJMSProvider</h2>
        
        
        <p>Creates a JMS Provider using the wsadmin tool</p>
        
        
            <p>This procedure creates a new JMS provider using a Jython script.</p>

        
        <h3>CreateJMSProvider Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td >Wsadmin Absolute Path</td>
                <td>Path to wsadmin. If the location of wsadmin is in the PATH environment variable, then just the script name can be specified omitting its full path. E.g. '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">Scope</td>
                <td>Specifies a scope of cell, node, server, or cluster for the JMS provider. E.g. Cell=Cell01,Node=Node01,Server=server1 </td>
            </tr>
            
            <tr>
                <td class="required">JMS Provider Name</td>
                <td>Specifies the name to assign to the new JMS provider. </td>
            </tr>
            
            <tr>
                <td class="required">Initial Context Factory</td>
                <td>Specifies the Java class name of the initial context factory for the JMS provider.</td>
            </tr>
            
            <tr>
                <td class="required">JMS provider URL</td>
                <td>Specifies the JMS provider URL for external JNDI lookups.</td>
            </tr>
            
            <tr>
                <td >Classpath</td>
                <td>Specifies a list of paths or Java archive (JAR) file names which together form the location for the resource provider classes. Use a semicolon (;) to separate class paths.</td>
            </tr>
            
            <tr>
                <td >Description</td>
                <td>Specifies a description of the JMS Provider.</td>
            </tr>
            
            <tr>
                <td >Isolated Class Loader</td>
                <td>If set to true, specifies that the resource provider is loaded in its own class loader.</td>
            </tr>
            
            <tr>
                <td >Native Path</td>
                <td>Specifies an optional path to any native libraries, such as *.dll and *.so. Native path entries are separated by a semicolon (;).</td>
            </tr>
            
            <tr>
                <td >Provider Type</td>
                <td>Specifies the JMS provider type that this JMS provider uses.</td>
            </tr>
            
            <tr>
                <td >Property Set</td>
                <td>Specifies resource properties in the following format: [[['name','nameValue1'],['type','typeValue1'],['value','valueValue1']]... [['name','nameValuen'],['type','typeValuen'],['value','valueValuen']]]</td>
            </tr>
            
            <tr>
                <td >Supports ASF</td>
                <td>If set to true, specifies that the JMS provider supports Application Server Facilities (ASF), which provides concurrency and transactional support for applications.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Create JMS Provider</h3>
                <p>To create a new JMS provider, do these steps:</p>
                <ol>
                    <li>Go to the CreateJMSProvider procedure. </li>
                    <li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/CreateJMSProvider/EC-WebSphereCreateJMSProvider2.png" />
                </ol>

        </p>
        
    </div>

    
    <div id="DeleteJMSProvider">
        <h2>DeleteJMSProvider</h2>
        
        
        <p>Deletes JMS Provider</p>
        
        
            <p>This procedure deletes an existing JMS Provider.</p>

        
        <h3>DeleteJMSProvider Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Provider Scope</td>
                <td>Scope of the WebSphere messaging provider to be deleted.</td>
            </tr>
            
            <tr>
                <td class="required">JMS Provider Administartive Name</td>
                <td>The administrative name of JMS Provider to be deleted.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Delete JMS Provider</h3>
                <p>To delete JMS Provider in Commander interface, do these steps:</p>
                <ol>
                    <li>Create procedure.</li>
                    <li>Create step, choose Plugin, choose DeleteJMSProvider from procedures
                    picker.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/DeleteJMSProvider/ProcedureConfig.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following
                job details:</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSProvider/ProcedureResult.png" />
                <p>To delete JMS Provider in Flow interface, do these steps:</p>
                <ol>
                    <li>Create Pipeline.</li>
                    <li>Create task.</li>
                    <li>In task definition choose Plugin and choose following parameters:
                    <p><img src="../../plugins/EC-WebSphere/images/DeleteJMSProvider/PipelinePicker.png" /></p>
                    </li>
                    <li>Click on arrow.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/DeleteJMSProvider/PipelineConfig.png" />
                </ol>
                <p>After the pipeline runs, you can view the results, including the
                following step details:</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSProvider/PipelineResult.png" />
                <p>In the <b>DeleteJMSProvider</b> step, click the Log icon to see the
                diagnostic information. The output is similar to the following
                diagnostic report.</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSProvider/ProcedureLog.png" />

        </p>
        
    </div>

    
    <div id="CreateOrUpdateJMSQueue">
        <h2>CreateOrUpdateJMSQueue</h2>
        
        
        <p>Creates or updates JMS Queues</p>
        
        
            <p>This procedure creates a new JMS Queue or updates an existing JMS Queue.</p>

        
        <h3>CreateOrUpdateJMSQueue Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Messaging System Type</td>
                <td>The name of the messaging provider. Pass in either WMQ or SIB.</td>
            </tr>
            
            <tr>
                <td class="required">Queue Scope</td>
                <td>Scope of the messaging provider at which the JMS Queue is to be created.</td>
            </tr>
            
            <tr>
                <td class="required">Queue Administrative Name</td>
                <td>The administrative name assigned to this WebSphere MQ messaging provider queue.</td>
            </tr>
            
            <tr>
                <td class="required">Queue Name</td>
                <td>Name of the Queue.</td>
            </tr>
            
            <tr>
                <td class="required">JNDI Name</td>
                <td>The name used to bind this object into WebSphere Application Server JNDI.</td>
            </tr>
            
            <tr>
                <td >Queue Manager Name</td>
                <td>Queue manager that hosts the queue.</td>
            </tr>
            
            <tr>
                <td >Queue Administrative Description</td>
                <td>An administrative description assigned to queue.</td>
            </tr>
            
            <tr>
                <td >Additional Options</td>
                <td>
            This parameter can be used to either override defaults or pass Custom Properties. 
            For example: -ccsid 1208 -readAhead YES
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Create or update JMS Queue</h3>
                <p>To create or update JMS Queue in Commander interface, do these steps:</p>
                <ol>
                    <li>Create procedure.</li>
                    <li>Create step, choose Plugin, choose CreateOrUpdateJMSQueue from
                    procedures picker.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateJMSQueue/ProcedureConfig.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following
                job details:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateJMSQueue/ProcedureResult.png" />
                <p>To create or update JMS Queue in Flow interface, do these steps:</p>
                <ol>
                    <li>Create Pipeline.</li>
                    <li>Create task.</li>
                    <li>In task definition choose Plugin and choose following parameters:
                    <p><img src="../../plugins/EC-WebSphere/images/CreateOrUpdateJMSQueue/PipelinePicker.png" /></p>
                    </li>
                    <li>Click on arrow.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateJMSQueue/PipelineConfig.png" />
                </ol>
                <p>After the pipeline runs, you can view the results, including the
                following step details:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateJMSQueue/PipelineResult.png" />
                <p>In the <b>CreateOrUpdateJMSQueue</b> step, click the Log icon to see
                the diagnostic information. The output is similar to the following
                diagnostic report.</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateJMSQueue/ProcedureLog.png" />

        </p>
        
    </div>

    
    <div id="DeleteJMSQueue">
        <h2>DeleteJMSQueue</h2>
        
        
        <p>Deletes JMS Queues</p>
        
        
            <p>This procedure deletes an existing JMS Queue.</p>

        
        <h3>DeleteJMSQueue Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Messaging System Type</td>
                <td>The name of the messaging provider. Pass in either WMQ or SIB.</td>
            </tr>
            
            <tr>
                <td class="required">Queue Scope</td>
                <td>Scope of the messaging provider at which the JMS Queue is to be deleted.</td>
            </tr>
            
            <tr>
                <td class="required">Queue Administrative Name</td>
                <td>The administrative name assigned to this WebSphere MQ messaging provider queue.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Delete JMS Queue</h3>
                <p>To delete JMS Queue in Commander interface, do these steps:</p>
                <ol>
                    <li>Create procedure.</li>
                    <li>Create step, choose Plugin, choose DeleteJMSQueue from procedures
                    picker.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/DeleteJMSQueue/ProcedureConfig.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following
                job details:</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSQueue/ProcedureResult.png" />
                <p>To delete JMS Queue in Flow interface, do these steps:</p>
                <ol>
                    <li>Create Pipeline.</li>
                    <li>Create task.</li>
                    <li>In task definition choose Plugin and choose following parameters:
                    <p><img src="../../plugins/EC-WebSphere/images/DeleteJMSQueue/PipelinePicker.png" /></p>
                    </li>
                    <li>Click on arrow.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/DeleteJMSQueue/PipelineConfig.png" />
                </ol>
                <p>After the pipeline runs, you can view the results, including the
                following step details:</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSQueue/PipelineResult.png" />
                <p>In the <b>DeleteJMSQueue</b> step, click the Log icon to see the
                diagnostic information. The output is similar to the following
                diagnostic report.</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSQueue/ProcedureLog.png" />

        </p>
        
    </div>

    
    <div id="CreateOrUpdateJMSTopic">
        <h2>CreateOrUpdateJMSTopic</h2>
        
        
        <p>Creates or updates JMS Topics</p>
        
        
            <p>This procedure creates a new JMS Topic or updates an existing JMS Topic.</p>

        
        <h3>CreateOrUpdateJMSTopic Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Messaging System Type</td>
                <td>The name of the messaging provider. Pass in either WMQ or SIB.</td>
            </tr>
            
            <tr>
                <td class="required">Topic Scope</td>
                <td>Scope of the messaging provider at which the JMS Topic is to be created.</td>
            </tr>
            
            <tr>
                <td class="required">Topic Administrative Name</td>
                <td>The administrative name assigned to this WebSphere MQ messaging provider Topic.</td>
            </tr>
            
            <tr>
                <td class="required">Topic Name</td>
                <td>Name of the Topic.</td>
            </tr>
            
            <tr>
                <td class="required">JNDI Name</td>
                <td>The name used to bind this object into WebSphere Application Server JNDI.</td>
            </tr>
            
            <tr>
                <td >Topic Administrative Description</td>
                <td>An administrative description assigned to Topic.</td>
            </tr>
            
            <tr>
                <td >Additional Options</td>
                <td>
            This parameter can be used to either override defaults or pass Custom Properties. 
            For example: -readAhead YES -ccsid 1208
        </td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
             <h3>Create or update JMS Topic</h3>
                <p>To create or update JMS Topic in Commander interface, do these steps:</p>
                <ol>
                    <li>Create procedure.</li>
                    <li>Create step, choose Plugin, choose CreateOrUpdateJMSTopic from
                    procedures picker.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateJMSTopic/ProcedureConfig.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following
                job details:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateJMSTopic/ProcedureResult.png" />
                <p>To create or update JMS Topic in Flow interface, do these steps:</p>
                <ol>
                    <li>Create Pipeline.</li>
                    <li>Create task.</li>
                    <li>In task definition choose Plugin and choose following parameters:
                    <p><img src="../../plugins/EC-WebSphere/images/CreateOrUpdateJMSTopic/PipelinePicker.png" /></p>
                    </li>
                    <li>Click on arrow.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateJMSTopic/PipelineConfig.png" />
                </ol>
                <p>After the pipeline runs, you can view the results, including the
                following step details:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateJMSTopic/PipelineResult.png" />
                <p>In the <b>CreateOrUpdateJMSTopic</b> step, click the Log icon to see
                the diagnostic information. The output is similar to the following
                diagnostic report.</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateJMSTopic/ProcedureLog.png" />

        </p>
        
    </div>

    
    <div id="DeleteJMSTopic">
        <h2>DeleteJMSTopic</h2>
        
        
        <p>Deletes JMS Topics</p>
        
        
            <p>This procedure deletes an existing JMS Topic.</p>

        
        <h3>DeleteJMSTopic Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Messaging System Type</td>
                <td>The name of the messaging provider. Pass in either WMQ or SIB.</td>
            </tr>
            
            <tr>
                <td class="required">Topic Scope</td>
                <td>Scope of the messaging provider at which the JMS Topic is to be deleted.</td>
            </tr>
            
            <tr>
                <td class="required">Topic Administrative Name</td>
                <td>The administrative name assigned to this WebSphere MQ messaging provider topic.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Delete JMS Topic</h3>
                <p>To delete JMS Topic in Commander interface, do these steps:</p>
                <ol>
                    <li>Create procedure.</li>
                    <li>Create step, choose Plugin, choose DeleteJMSTopic from procedures
                    picker.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/DeleteJMSTopic/ProcedureConfig.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following
                job details:</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSTopic/ProcedureResult.png" />
                <p>To delete JMS Topic in Flow interface, do these steps:</p>
                <ol>
                    <li>Create Pipeline.</li>
                    <li>Create task.</li>
                    <li>In task definition choose Plugin and choose following parameters:
                    <p><img src="../../plugins/EC-WebSphere/images/DeleteJMSTopic/PipelinePicker.png" /></p>
                    </li>
                    <li>Click on arrow.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/DeleteJMSTopic/PipelineConfig.png" />
                </ol>
                <p>After the pipeline runs, you can view the results, including the
                following step details:</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSTopic/PipelineResult.png" />
                <p>In the <b>DeleteJMSTopic</b> step, click the Log icon to see the
                diagnostic information. The output is similar to the following
                diagnostic report.</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSTopic/ProcedureLog.png" />

        </p>
        
    </div>

    
    <div id="CreateOrUpdateSIBJMSActivationSpec">
        <h2>CreateOrUpdateSIBJMSActivationSpec</h2>
        
        
        <p>Creates or updates SIB JMS Activation Specs</p>
        
        
            <p>This procedure creates a new JMS Activation Spec or updates an existing JMS Activation Spec.</p>

        
        <h3>CreateOrUpdateSIBJMSActivationSpec Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Scope of the Activation Spec</td>
                <td>Scope of the WebSphere Default messaging provider at which the Activation Spec is to be created.</td>
            </tr>
            
            <tr>
                <td class="required">Activation Spec Administrative Name</td>
                <td>The administrative name assigned to this Activation Spec.</td>
            </tr>
            
            <tr>
                <td class="required">JNDI Name</td>
                <td>The name and location used to bind this object into WebSphere Application Server JNDI.</td>
            </tr>
            
            <tr>
                <td class="required">Destination JNDI Name</td>
                <td>The JNDI name of the destination JMS queue or topic used by the message-driven bean.</td>
            </tr>
            
            <tr>
                <td >Activation Spec Administrative Description</td>
                <td>An Administrative description assigned to Activation Spec.</td>
            </tr>
            
            <tr>
                <td >Destination Type</td>
                <td>An option to determine whether the message_driven bean uses a JMS queue or a JMS topic.</td>
            </tr>
            
            <tr>
                <td >Message Selector</td>
                <td>
            The JMS message selector used to determine which messages the message-driven bean receives.
            The value is a string that is used to select a subset of the available messages.
            The syntax is based on a subset of the SQL 92 conditional expression syntax, as described in the JMS specification.
            Refer to the information center for more information.
            The selector string can refer to fields in the JMS message header and fields in the message properties.
            Message selectors cannot reference message body values.
            A null value (an empty string) indicates that there is no message selector for the message consumer.
        </td>
            </tr>
            
            <tr>
                <td >Additional Options</td>
                <td>Used to either override defaults or pass Custom Properties.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Create or update SIB JMS Activation Spec</h3>
                <p>To create or update JMS Activation Spec in Commander interface, do these steps:</p>
                <ol>
                    <li>Create procedure.</li>
                    <li>Create step, choose Plugin, choose CreateOrUpdateSIBJMSActivationSpec from
                    procedures picker.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateSIBJMSActivationSpec/ProcedureConfig.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following
                job details:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateSIBJMSActivationSpec/ProcedureResult.png" />
                <p>To create or update JMS Topic in Flow interface, do these steps:</p>
                <ol>
                    <li>Create Pipeline.</li>
                    <li>Create task.</li>
                    <li>In task definition choose Plugin and choose following parameters:
                    <p><img src="../../plugins/EC-WebSphere/images/CreateOrUpdateSIBJMSActivationSpec/PipelinePicker.png" /></p>
                    </li>
                    <li>Click on arrow.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateSIBJMSActivationSpec/PipelineConfig.png" />
                </ol>
                <p>After the pipeline runs, you can view the results, including the
                following step details:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateSIBJMSActivationSpec/PipelineResult.png" />
                <p>In the <b>CreateOrUpdateSIBJMSActivationSpec</b> step, click the Log icon to see
                the diagnostic information. The output is similar to the following
                diagnostic report.</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateSIBJMSActivationSpec/ProcedureLog.png" />

        </p>
        
    </div>

    
    <div id="CreateOrUpdateWMQJMSActivationSpec">
        <h2>CreateOrUpdateWMQJMSActivationSpec</h2>
        
        
        <p>Creates or updates WMQ JMS Activation Specs</p>
        
        
            <p>This procedure creates a new JMS Activation Spec or updates an existing JMS Activation Spec.</p>

        
        <h3>CreateOrUpdateWMQJMSActivationSpec Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Scope of the Activation Spec</td>
                <td>
            Scope of the WebSphere MQ messaging provider at which the Activation Spec is to be created.
        </td>
            </tr>
            
            <tr>
                <td class="required">Activation Spec Administrative Name</td>
                <td>The administrative name assigned to this Activation Spec.</td>
            </tr>
            
            <tr>
                <td class="required">JNDI Name</td>
                <td>The name and location used to bind this object into WebSphere Application Server JNDI.</td>
            </tr>
            
            <tr>
                <td class="required">Destination JNDI Name</td>
                <td>The JNDI name of the destination JMS queue or topic used by the message-driven bean.</td>
            </tr>
            
            <tr>
                <td class="required">Destination JNDI Type</td>
                <td>The type of the destination specified by "Destination JNDI Name" parameter.</td>
            </tr>
            
            <tr>
                <td >Activation Spec Administrative Description</td>
                <td>An Administrative Description assigned to Activation Spec.</td>
            </tr>
            
            <tr>
                <td >Client Channel Definition URL</td>
                <td>A URL to a client channel definition table to use, for this Activation Spec, when contacting WebSphere MQ.</td>
            </tr>
            
            <tr>
                <td >Client Channel Definition Queue Manager</td>
                <td>A queue manager name, used to select one or more entries from a client channel definition table.</td>
            </tr>
            
            <tr>
                <td >Additional Options</td>
                <td>Used to either override defaults or pass Custom Properties.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Create or update WMQ JMS Activation Spec</h3>
                <p>To create or update WMQ JMS Activation Spec in Commander interface, do these steps:</p>
                <ol>
                    <li>Create procedure.</li>
                    <li>Create step, choose Plugin, choose CreateOrUpdateWMQJMSActivationSpec from
                    procedures picker.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateWMQJMSActivationSpec/ProcedureConfig.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following
                job details:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateWMQJMSActivationSpec/ProcedureResult.png" />
                <p>To create or update WMQ JMS Activation Spec in Flow interface, do these steps:</p>
                <ol>
                    <li>Create Pipeline.</li>
                    <li>Create task.</li>
                    <li>In task definition choose Plugin and choose following parameters:
                    <p><img src="../../plugins/EC-WebSphere/images/CreateOrUpdateWMQJMSActivationSpec/PipelinePicker.png" /></p>
                    </li>
                    <li>Click on arrow.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateWMQJMSActivationSpec/PipelineConfig.png" />
                </ol>
                <p>After the pipeline runs, you can view the results, including the
                following step details:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateWMQJMSActivationSpec/PipelineResult.png" />
                <p>In the <b>CreateOrUpdateWMQJMSActivationSpec</b> step, click the Log icon to see
                the diagnostic information. The output is similar to the following
                diagnostic report.</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateWMQJMSActivationSpec/ProcedureLog.png" />

        </p>
        
    </div>

    
    <div id="DeleteJMSActivationSpec">
        <h2>DeleteJMSActivationSpec</h2>
        
        
        <p>Deletes JMS Activation Specs</p>
        
        
            <p>This procedure deletes an existing JMS ActivationSpec.</p>

        
        <h3>DeleteJMSActivationSpec Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Messaging System Type</td>
                <td>The name of the messaging provider. Pass in either WMQ or SIB.</td>
            </tr>
            
            <tr>
                <td class="required">Scope of the Activation Spec</td>
                <td>Scope of the messaging provider at which the JMS Activation Spec is to be deleted.</td>
            </tr>
            
            <tr>
                <td class="required">Activation Spec Administrative Name</td>
                <td>The administrative name assigned to this WebSphere MQ messaging provider Activation Spec.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Delete JMS Activation Spec</h3>
                <p>To delete JMS Activation Spec in Commander interface, do these steps:</p>
                <ol>
                    <li>Create procedure.</li>
                    <li>Create step, choose Plugin, choose DeleteJMSActivationSpec from procedures
                    picker.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/DeleteJMSActivationSpec/ProcedureConfig.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following
                job details:</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSActivationSpec/ProcedureResult.png" />
                <p>In the <b>DeleteJMSActivationSpec</b> step, click the Log icon to see the
                diagnostic information. The output is similar to the following
                diagnostic report.</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSActivationSpec/ProcedureLog.png" />
                <p>To delete JMS Activation Spec in Flow interface, do these steps:</p>
                <ol>
                    <li>Create Pipeline.</li>
                    <li>Create task.</li>
                    <li>In task definition choose Plugin and choose following parameters:
                    <p><img src="../../plugins/EC-WebSphere/images/DeleteJMSActivationSpec/PipelinePicker.png" /></p>
                    </li>
                    <li>Click on arrow.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/DeleteJMSActivationSpec/PipelineConfig.png" />
                </ol>
                <p>After the pipeline runs, you can view the results, including the
                following step details:</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSActivationSpec/PipelineResult.png" />
                <p>In the pipeline tasks click on "Update SIB JMS Activation Spec", then click the Log icon to see the
                diagnostic information. The output is similar to the following
                diagnostic report.</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSActivationSpec/PipelineLog.png" />

        </p>
        
    </div>

    
    <div id="CreateOrUpdateSIBJMSConnectionFactory">
        <h2>CreateOrUpdateSIBJMSConnectionFactory</h2>
        
        
        <p>Creates or updates SIB JMS Connection Factories</p>
        
        
            <p>This procedure creates a new SIB JMS Connection Factory or updates an existing JMS Connection Factory.</p>

        
        <h3>CreateOrUpdateSIBJMSConnectionFactory Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Scope of the Connection Factory</td>
                <td>
            Scope of the WebSphere Default messaging provider at which the Connection Factory is to be created.
        </td>
            </tr>
            
            <tr>
                <td class="required">Connection Factory Administrative Name</td>
                <td>
            The administrative name assigned to this Connection Factory.
        </td>
            </tr>
            
            <tr>
                <td class="required">Bus Name</td>
                <td>Name of the service integration bus to which connections are made.</td>
            </tr>
            
            <tr>
                <td class="required">JNDI Name</td>
                <td>
            The name and location used to bind this object into WebSphere Application Server JNDI.
        </td>
            </tr>
            
            <tr>
                <td >Connection Factory Type</td>
                <td>
            Type of Connection Factory to create. Should be one of Queue or Topic.
            To create a generic connection factory, leave this parameter unset.
            This parameter is being used only if Connection Factory is going to be created.
            Since factory type can't be updated in existing factory, this parameter will be omited if Connection Factory already exists.
        </td>
            </tr>
            
            <tr>
                <td >Connection Factory Administrative Description</td>
                <td>An Administrative Description assigned to Connection Factory.</td>
            </tr>
            
            <tr>
                <td >Additional Options</td>
                <td>Used to either override defaults or pass Custom Properties.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Create or update SIB JMS Connection Factory</h3>
                <p>To create or update SIB JMS Connection Factory in Commander interface, do these steps:</p>
                <ol>
                    <li>Create procedure.</li>
                    <li>Create step, choose Plugin, choose CreateOrUpdateSIBJMSConnectionFactory from
                    procedures picker.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateSIBJMSConnectionFactory/ProcedureConfig.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following
                job details:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateSIBJMSConnectionFactory/ProcedureResult.png" />
                <p>To create or update JMS Topic in Flow interface, do these steps:</p>
                <ol>
                    <li>Create Pipeline.</li>
                    <li>Create task.</li>
                    <li>In task definition choose Plugin and choose following parameters:
                    <p><img src="../../plugins/EC-WebSphere/images/CreateOrUpdateSIBJMSConnectionFactory/PipelinePicker.png" /></p>
                    </li>
                    <li>Click on arrow.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateSIBJMSConnectionFactory/PipelineConfig.png" />
                </ol>
                <p>After the pipeline runs, you can view the results, including the
                following step details:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateSIBJMSConnectionFactory/PipelineResult.png" />
                <p>In the <b>CreateOrUpdateSIBJMSConnectionFactory</b> step, click the Log icon to see
                the diagnostic information. The output is similar to the following
                diagnostic report.</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateSIBJMSConnectionFactory/ProcedureLog.png" />

        </p>
        
    </div>

    
    <div id="CreateOrUpdateWMQJMSConnectionFactory">
        <h2>CreateOrUpdateWMQJMSConnectionFactory</h2>
        
        
        <p>Creates or updates WMQ JMS Connection Factories</p>
        
        
            <p>This procedure creates a new WMQ JMS Connection Factory or updates an existing JMS Connection Factory.</p>

        
        <h3>CreateOrUpdateWMQJMSConnectionFactory Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Scope of the Connection Factory</td>
                <td>
            Scope of the WebSphere MQ messaging provider at which the Connection Factory is to be created.
        </td>
            </tr>
            
            <tr>
                <td class="required">Connection Factory Administrative Name</td>
                <td>
            The administrative name assigned to this Connection Factory.
        </td>
            </tr>
            
            <tr>
                <td class="required">Connection Factory Type</td>
                <td>
            Use this parameter to determine whether a unified connection factory, a queue connection factory or a topic connection factory is to be created.
            This needs to be one of the values from CF, QCF and TCF. Default is CF.
            Since factory type can't be updated in existing factory, this parameter will be omited if Connection Factory already exists.
        </td>
            </tr>
            
            <tr>
                <td class="required">JNDI Name</td>
                <td>
            The name and location used to bind this object into WebSphere Application Server JNDI.
        </td>
            </tr>
            
            <tr>
                <td >Connection Factory Administrative Description</td>
                <td>An Administrative description assigned to Connection Factory.</td>
            </tr>
            
            <tr>
                <td >Client Channel Definition URL</td>
                <td>
            A URL to a client channel definition table to use, for this Connection Factory, when contacting WebSphere MQ.
        </td>
            </tr>
            
            <tr>
                <td >Client Channel Definition Queue Manager</td>
                <td>A queue manager name, used to select one or more entries from a client channel definition table.</td>
            </tr>
            
            <tr>
                <td >Additional Options</td>
                <td>Used to either override defaults or pass Custom Properties.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Create or update WMQ JMS Connection Factory</h3>
                <p>To create or update WMQ JMS Connection Factory in Commander interface, do these steps:</p>
                <ol>
                    <li>Create procedure.</li>
                    <li>Create step, choose Plugin, choose CreateOrUpdateWMQJMSConnectionFactory from
                    procedures picker.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateWMQJMSConnectionFactory/ProcedureConfig.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following
                job details:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateWMQJMSConnectionFactory/ProcedureResult.png" />
                <p>To create or update JMS Topic in Flow interface, do these steps:</p>
                <ol>
                    <li>Create Pipeline.</li>
                    <li>Create task.</li>
                    <li>In task definition choose Plugin and choose following parameters:
                    <p><img src="../../plugins/EC-WebSphere/images/CreateOrUpdateWMQJMSConnectionFactory/PipelinePicker.png" /></p>
                    </li>
                    <li>Click on arrow.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateWMQJMSConnectionFactory/PipelineConfig.png" />
                </ol>
                <p>After the pipeline runs, you can view the results, including the
                following step details:</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateWMQJMSConnectionFactory/PipelineResult.png" />
                <p>In the <b>CreateOrUpdateWMQJMSConnectionFactory</b> step, click the Log icon to see
                the diagnostic information. The output is similar to the following
                diagnostic report.</p>
                <img src="../../plugins/EC-WebSphere/images/CreateOrUpdateWMQJMSConnectionFactory/ProcedureLog.png" />

        </p>
        
    </div>

    
    <div id="DeleteJMSConnectionFactory">
        <h2>DeleteJMSConnectionFactory</h2>
        
        
        <p>Deletes JMS Connection Factories</p>
        
        
            <p>This procedure deletes an existing JMS ConnectionFactory.</p>

        
        <h3>DeleteJMSConnectionFactory Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Messaging System Type</td>
                <td>The name of the messaging provider. Pass in either WMQ or SIB.</td>
            </tr>
            
            <tr>
                <td class="required">Scope of the Connection Factory</td>
                <td>
            Scope of the WebSphere messaging provider at which the Connection Factory is to be deleted.
        </td>
            </tr>
            
            <tr>
                <td class="required">Connection Factory Administrative Name</td>
                <td>The administrative name assigned to this Connection Factory.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Delete JMS ConnectionFactory</h3>
                <p>To delete JMS ConnectionFactory in Commander interface, do these steps:</p>
                <ol>
                    <li>Create procedure.</li>
                    <li>Create step, choose Plugin, choose DeleteJMSConnectionFactory from procedures
                    picker.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/DeleteJMSConnectionFactory/ProcedureConfig.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following
                job details:</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSConnectionFactory/ProcedureResult.png" />
                <p>To delete JMS ConnectionFactory in Flow interface, do these steps:</p>
                <ol>
                    <li>Create Pipeline.</li>
                    <li>Create task.</li>
                    <li>In task definition choose Plugin and choose following parameters:
                    <p><img src="../../plugins/EC-WebSphere/images/DeleteJMSConnectionFactory/PipelinePicker.png" /></p>
                    </li>
                    <li>Click on arrow.</li>
                    <li>Enter the following parameters: </li>
                    <img src="../../plugins/EC-WebSphere/images/DeleteJMSConnectionFactory/PipelineConfig.png" />
                </ol>
                <p>After the pipeline runs, you can view the results, including the
                following step details:</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSConnectionFactory/PipelineResult.png" />
                <p>In the <b>DeleteJMSConnectionFactory</b> step, click the Log icon to see the
                diagnostic information. The output is similar to the following
                diagnostic report.</p>
                <img src="../../plugins/EC-WebSphere/images/DeleteJMSConnectionFactory/ProcedureLog.png" />

        </p>
        
    </div>

    
    <div id="DeployApp">
        <h2>DeployApp</h2>
        
        
        <p>Deploys an application using AdminApp.install</p>
        
        
            <p>This procedure undeploys an application using a Jython script and invoking AdminApp.uninstall.</p>

        
        <h3>DeployApp Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Absolute Path</td>
                <td>Absolute path of wsadmin, including filename and extension. If the path in which wsadmin is stored in the path environmental variable, the absolute path is ommited. i.e: '/path/to/wsadmin.sh' or 'wsadmin.bat'. </td>
            </tr>
            
            <tr>
                <td >Commands</td>
                <td>Commands to be entered to wsadmin. Use one command per line.</td>
            </tr>
            
            <tr>
                <td >Java Parameters</td>
                <td>    Java options to be passed to wsadmin, separate them using semicolons (;).</td>
            </tr>
            
            <tr>
                <td >Classpath</td>
                <td>Jars to be passed to the wsadmin classpath. It is a string containing paths (semicolon-separated) the required JARs to execute wsadmin in a particular job. i.e: 'c:/MyDir/Myjar.jar;d:/yourdir/yourdir.jar' or '/MyDir/Myjar.jar;/yourdir/yourdir.jar'</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name of the web application to be deploy. i.e: 'webapp'. </td>
            </tr>
            
            <tr>
                <td class="required">Application Path</td>
                <td>Absolute path of the application to deploy. i.e: '/path/to/webapp.war' or 'c:/mydir/webapp.war'. </td>
            </tr>
            
            <tr>
                <td >Additional Commands</td>
                <td>Additional commands to be entered for wsadmin.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Deploying Applications</h3>
                <p>To deploy an application, do these steps:select the following
                highlighted
                step:</p>
                <ol>
                    <li>Go to the DeployApp procedure.</li>
                    <li>Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/DeployApp/deployApp2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details, which show that the
                application was deployed
                successfully:</p><img src="../../plugins/EC-WebSphere/images/DeployApp/deployApp3.png" />
                <p>In the <b>DeployApp</b> step, click the Log icon to
                see the diagnostic information. The output is similar to the
                following diagnostic
                report.</p><img src="../../plugins/EC-WebSphere/images/DeployApp/deployApp4.png" />

        </p>
        
    </div>

    
    <div id="DeployEnterpriseApp">
        <h2>DeployEnterpriseApp</h2>
        
        
        <p>Deploys an enterprise application using wsadmin tool</p>
        
        
            <p>This procedure deploys java enterprise application (.EAR) or java web application (.WAR) on given targets. If application is already deployed, procedure updates application.</p>

        
        <h3>DeployEnterpriseApp Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td >Wsadmin Absolute Path</td>
                <td>Path to wsadmin. If the location of wsadmin is in the PATH environment variable, then just the script name can be specified omitting its full path. E.g. '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Specifies logical name to be given to installing enterprise application. Do not include whitespaces in application name.</td>
            </tr>
            
            <tr>
                <td class="required">Application Path</td>
                <td>
            Absolute path of the application to deploy. Use "/" as the path separator on both linux and windows i.e: '/path/to/webapp.war' or 'c:/mydir/webapp.war'.
        </td>
            </tr>
            
            <tr>
                <td >Target cluster</td>
                <td>Name of the cluster on which to deploy enterprise application. Not required in WebSphere Base Edition. Enter either target cluster or target server(s).</td>
            </tr>
            
            <tr>
                <td >Target server(s)</td>
                <td>Specify single or list of standalone application servers on which to deploy enterprise application. Specify servers in the form Node=server. For e.g. Node01=Server1,Node02=Server2. Not required in WebSphere Base Edition.</td>
            </tr>
            
            <tr>
                <td >Map modules to servers</td>
                <td>Specify deployment targets where you want to install the modules that are contained in your application. Modules can be installed on the same deployment target or dispersed among several deployment targets. Give input in format [ "Module1Name" Module1URL server1][ "Module2Name" Module2URL server2 ] E.g. [ "Increment EJB module" Increment.jar,META-INF/ejb-jar.xml WebSphere:cell=Cell01,node=Node01,server=singleServer ]</td>
            </tr>
            
            <tr>
                <td >Additional deployment parameters</td>
                <td>Specify any additional options for AdminApp. Install object in case not listed in this input form. For more information about each of the supported arguments, refer to 'http://www-01.ibm.com/support/knowledgecenter/SSAW57_8.5.5/com.ibm.websphere.nd.doc/ae/rxml_taskoptions.html'.</td>
            </tr>
            
            <tr>
                <td >Directory to install application</td>
                <td>Specifies the directory to which the enterprise archive (EAR) file will be installed. Default is profile_root/installedApps/cell_name/application_name.ear directory.</td>
            </tr>
            
            <tr>
                <td >Precompile JavaServer Pages files?</td>
                <td>Specify whether to precompile JavaServer Pages (JSP) files as a part of installation. The default is not to precompile JSP files.</td>
            </tr>
            
            <tr>
                <td >Distribute application?</td>
                <td>Specifies whether the product expands application binaries in the installation location during installation.</td>
            </tr>
            
            <tr>
                <td >Use binary configuration?</td>
                <td>Specifies whether the application server uses the binding, extensions, and deployment descriptors located with the application deployment
            document, the deployment.xml file (default), or those located in the enterprise archive (EAR) file. Default is to use bindings located in deployment.xml.</td>
            </tr>
            
            <tr>
                <td >Deploy enterprise beans?</td>
                <td>Specifies whether the EJBDeploy tool runs during application installation. Default is false(true for EJB 3.0 modules).</td>
            </tr>
            
            <tr>
                <td >Create MBeans for resources?</td>
                <td>Specifies whether to create MBeans for resources such as servlets or JSP files within an application when the application starts. Default is create MBeans.</td>
            </tr>
            
            <tr>
                <td >Override class reloading settings for web and EJB modules?</td>
                <td>Specifies whether the product run time detects changes to application classes when the application is running. If yes, then on such changes application is stopped and restarted to reload updated classes.</td>
            </tr>
            
            <tr>
                <td >Deploy web services?</td>
                <td>Specifies whether to deploy web services. Default is do not enable Deploy web services.</td>
            </tr>
            
            <tr>
                <td >Process embedded configuration?</td>
                <td>Specifies whether the embedded configuration should be processed. An embedded configuration consists of files such as resource.xml,
            variables.xml, and deployment.xml.</td>
            </tr>
            
            <tr>
                <td >Allow EJB reference targets to resolve automatically?</td>
                <td>Specifies whether the embedded configuration should be processed.</td>
            </tr>
            
            <tr>
                <td >Deploy client modules?</td>
                <td>Select if the file to deploy has one or more client modules and want to configure environment entries for the client modules. Default is do not enable Client Module.</td>
            </tr>
            
            <tr>
                <td >Validate schema?</td>
                <td>Specifies whether to validate the deployment descriptors against published Java EE deployment descriptor schemas.</td>
            </tr>
            
            <tr>
                <td >Synchronize active nodes?</td>
                <td>Specify whether to synchronize active nodes. Applicable only for Network Deployment installation. Enabled by default.</td>
            </tr>
            
            <tr>
                <td >Start application?</td>
                <td>Specify whether to start application or not. Enabled by default.</td>
            </tr>
            
            <tr>
                <td >Reload interval in seconds</td>
                <td>Specifies the number of seconds to scan the application's file system for updated files. Default is 3 seconds.</td>
            </tr>
            
            <tr>
                <td >Validate resource references</td>
                <td>Specifies whether websphere examines the application references specified during application installation or updating and, if validation is
            enabled, warns you of incorrect references or fails the operation.</td>
            </tr>
            
            <tr>
                <td >File permission</td>
                <td>Specifies access permissions for application binaries.</td>
            </tr>
            
            <tr>
                <td >Customized file permission</td>
                <td>Provide custom file permissions if not listed in File permissions drop down.</td>
            </tr>
            
            <tr>
                <td >Business level application name</td>
                <td>Specifies whether websphere creates a new business-level application with the enterprise application that you are installing or makes the enterprise application a composition unit of an existing business-level application. The default is to create a new business-level application.</td>
            </tr>
            
            <tr>
                <td >Client deployment mode</td>
                <td>Specifies whether to deploy client modules to an isolated deployment target (Isolated), a federated node of a deployment manager (Federated),
            or an application server (Server Deployed). Default is Isolated</td>
            </tr>
            
            <tr>
                <td >Wsadmin Commands</td>
                <td>Commands to be entered to wsadmin. Use one command per line.</td>
            </tr>
            
            <tr>
                <td >Wsadmin Classpath</td>
                <td>Jars to be passed to the wsadmin classpath. It is a string containing paths (semicolon-separated) the required JARs to execute wsadmin in a particular job. i.e: 'c:/MyDir/Myjar.jar;d:/yourdir/yourdir.jar' or '/MyDir/Myjar.jar;/yourdir/yourdir.jar'.</td>
            </tr>
            
            <tr>
                <td >Wsadmin Java Parameters</td>
                <td>Java options to be passed to wsadmin, separate them using semicolons (;).</td>
            </tr>
            
            <tr>
                <td >Wsadmin Additional Arguments</td>
                <td>Additional arguements to be passed to wsadmin.</td>
            </tr>
            
            <tr>
                <td >Context root</td>
                <td>Applicable only to web applications (WAR).
Specifies the context root of the web application (WAR).
A context root for each web module is defined in the application deployment descriptor during application assembly. Use this field to assign a different context root to a web module. The context root is combined with the defined servlet mapping (from the WAR file) to compose the full URL that users type to access the servlet. For example, if the context root is /gettingstarted and the servlet mapping is MySession, then the URL is http://host:port/gettingstarted/MySession.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Deploy Enterprise Application</h3>
                <p>To deploy an enterprise application, do these steps:</p>
                <ol>
                    <li>Go to the DeployEnterpriseApp procedure. </li>
                    <li>Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/DeployEnterpriseApp/EC-WebSphereDeployEnterpriseApp2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details, which show that
                enterprise application is deployed successfully:</p>
                <img src="../../plugins/EC-WebSphere/images/DeployEnterpriseApp/EC-WebSphereDeployEnterpriseApp3.png" />
                <p>In the <b>DeployEnterpriseApp</b> step, click the Log icon
                to see the diagnostic information. The output is similar to
                the following diagnostic
                report.</p>
                <img src="../../plugins/EC-WebSphere/images/DeployEnterpriseApp/EC-WebSphereDeployEnterpriseApp4.png" />

        </p>
        
    </div>

    
    <div id="UndeployApp">
        <h2>UndeployApp</h2>
        
        
        <p>Undeploys an application using AdminApp.uninstall</p>
        
        
            <p>This procedure undeploys an application using a Jython script and invoking AdminApp.uninstall.</p>

        
        <h3>UndeployApp Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Absolute Path</td>
                <td>Absolute path of wsadmin, including filename and extension. If the path in which wsadmin is stored in the path environmental variable, the absolute path is ommited. i.e: '/path/to/wsadmin.sh' or 'wsadmin.bat'. </td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name of the application to undeploy. i.e: 'webapp'. </td>
            </tr>
            
            <tr>
                <td >Commands</td>
                <td>Commands to be entered to wsadmin. Use one command per line.</td>
            </tr>
            
            <tr>
                <td >Java Parameters</td>
                <td>Java options to be passed to wsadmin, separate them using semicolons (;).</td>
            </tr>
            
            <tr>
                <td >Classpath</td>
                <td>Jars to be passed to the wsadmin classpath. It is a string containing paths (semicolon-separated) the required JARs to execute wsadmin in a particular job. i.e: 'c:/MyDir/Myjar.jar;d:/yourdir/yourdir.jar' or '/MyDir/Myjar.jar;/yourdir/yourdir.jar'</td>
            </tr>
            
            <tr>
                <td >Additional Commands</td>
                <td>Additional commands to be entered for wsadmin.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3> Undeploying Applications</h3>
                <p>To undeploy an application, do these steps:</p>
                <ol>
                    <p>Go to the UndeployApp procedure.</p>
                    <p>Enter the following parameters: </p><img src="../../plugins/EC-WebSphere/images/UndeployApp/undeployApp2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details, which show that
                the application was undeployed
                successfully:</p><img src="../../plugins/EC-WebSphere/images/UndeployApp/undeployApp3.png" />
                <p>In the <b>UndeployApp</b> step, click the Log icon
                to see the diagnostic information. The output is similar to
                the following diagnostic
                report.</p><img src="../../plugins/EC-WebSphere/images/UndeployApp/undeployApp4.png" />

        </p>
        
    </div>

    
    <div id="UpdateApp">
        <h2>UpdateApp</h2>
        
        
        <p>Updates existing application</p>
        
        
            <p>This procedure updates already deployed application in units of files, modules or entire application.</p>

        
        <h3>UpdateApp Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Absolute Path</td>
                <td>Path to wsadmin. If the location of wsadmin is in the PATH environment variable, then just the script name can be specified omitting its full path. E.g. '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name of the web application to be updated. i.e: 'webapp'.</td>
            </tr>
            
            <tr>
                <td class="required">Content Type</td>
                <td>Specifies to type of content to update. Use File option for updating a single file, Partial Application option for updating application partially, Module option to add/update a module to the deployed application, Application option for updating the entire deployed application.</td>
            </tr>
            
            <tr>
                <td class="required">Operation</td>
                <td>Specifies to type of operation to perform as part of update procedure. Use Add option to  add new content, Update option to update existing content, AddUpdate option to add content and to replace if already exist, Delete option to remove existing content respectively. </td>
            </tr>
            
            <tr>
                <td >Content</td>
                <td>Specifies the file that contains the content that you want to update. For example, depending on the content type, the file could be an EAR file, a module, a partial zip, or a single file.Not required for Delete operation.</td>
            </tr>
            
            <tr>
                <td >Content URI</td>
                <td>The relative path beginning with the installed application archive file to the file to be replaced or added. For example, if the file is located at com/company/greeting.class in module hello.jar, specify hello.jar/com/company/greeting.class for the relative path</td>
            </tr>
            
            <tr>
                <td >Cluster Name</td>
                <td>Name of the cluster on which application is deployed.</td>
            </tr>
            
            <tr>
                <td >Server Name</td>
                <td>Name of the server on which application is deployed.</td>
            </tr>
            
            <tr>
                <td >Additional Parameters</td>
                <td>Additional parameters to pass while updating entire application or module/s, if required. For e.g. -nodeployejb, -BindJndiForEJBNonMessageBinding etc.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Update Application</h3>
                <p>To update application , do these steps:</p>
                <ol>
                    <li>Go to the UpdateApp procedure. </li>
                    <li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/UpdateApp/EC-WebSphereUpdateApp2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details, which show that
                WSDL files are published successfully:</p>
                <img src="../../plugins/EC-WebSphere/images/UpdateApp/EC-WebSphereUpdateApp3.png" />
                <p>In the <b>UpdateApp</b> step, click the Log icon
                to see the diagnostic information. The output is similar to
                the following diagnostic
                report.</p>
                <img src="../../plugins/EC-WebSphere/images/UpdateApp/EC-WebSphereUpdateApp4.png" />

        </p>
        
    </div>

    
    <div id="CheckApp">
        <h2>CheckApp</h2>
        
        
        <p>Checks if a web application is ready</p>
        
        
            <p>This procedure checks if a web application is ready by using a Jython script.</p>

        
        <h3>CheckApp Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td >Wsadmin Absolute Path</td>
                <td>Absolute path of wsadmin, including filename and extension. i.e: '/path/to/wsadmin.sh' or 'wsadmin.bat'. </td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name of the web application to be checked. i.e: 'webapp'. </td>
            </tr>
            
            <tr>
                <td class="required">Application State Checked</td>
                <td>
            Application State that is being checked, with any applicable retries based on wait time parameter.
            Any state that is not the desired state after any applicable retries, will be returned as a failure by the procedure.
        </td>
            </tr>
            
            <tr>
                <td >Wait Time</td>
                <td>Maximum duration of check application state retries.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Checking Application State</h3>
<p>To check Application State, do these steps:</p>
                <ol>
                    <li>Create procedure.</li>
                    <li>Create step, choose Plugin, choose CheckApp from procedures picker.</li>
                    <li>Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/CheckApp/ProcedureConfig.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details:</p>
                <img src="../../plugins/EC-WebSphere/images/CheckApp/ProcedureResult.png" />
<pre><code>            &lt;p&gt;To check Application State in Flow interface, do these steps:&lt;/p&gt;
            &lt;ol&gt;
                &lt;li&gt;Create Pipeline.&lt;/li&gt;
                &lt;li&gt;Create task.&lt;/li&gt;
                &lt;li&gt;In task definition choose Plugin and choose following parameters:&lt;p&gt;&lt;img src=&quot;../../plugins/EC-WebSphere/images/CheckApp/PipelinePicker.png&quot; /&gt;&lt;/p&gt;&lt;/li&gt;
                &lt;li&gt;Click on arrow.&lt;/li&gt;
                &lt;li&gt;Enter the following parameters: &lt;/li&gt;&lt;img src=&quot;../../plugins/EC-WebSphere/images/CheckApp/PipelineConfig.png&quot; /&gt;
            &lt;/ol&gt;
            &lt;p&gt;After the pipeline runs, you can view the results, including the following step details:&lt;/p&gt;
            &lt;img src=&quot;../../plugins/EC-WebSphere/images/CheckApp/PipelineResult.png&quot; /&gt;
            &lt;p&gt;In the &lt;b&gt;CheckApp&lt;/b&gt; step, click the Log icon
            to see the diagnostic information. The output is similar to
            the following diagnostic
            report.&lt;/p&gt;
            &lt;img src=&quot;../../plugins/EC-WebSphere/images/CheckApp/ProcedureLog.png&quot; /&gt;
</code></pre>

        </p>
        
    </div>

    
    <div id="CheckNodeStatus">
        <h2>CheckNodeStatus</h2>
        

        <p><b>(Applicable only for WebSphere Network Deployment installation.)</b>
</p>

        
        
        <p>Checks Node Status.</p>
        
        
            <p>This procedure checks WebSphere node status. It checks Node Agent and all servers associated with node by it's name.</p>

        
        <h3>CheckNodeStatus Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Path</td>
                <td>Path to wsadmin. If the location of wsadmin is in the PATH environment variable, then just the script name can be specified omitting its full path. E.g. '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td class="required">Name of the Node</td>
                <td>Name of the Node, which should be checked.</td>
            </tr>
            
            <tr>
                <td class="required">Success Criteria</td>
                <td>Conditions that must be met for successful completion of the procedure.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    
    <div id="CheckPageStatus">
        <h2>CheckPageStatus</h2>
        
        
        <p>Check the status of a page on a given URL</p>
        
        
            <p>This procedure checks the status of the page with the specified URL.</p>

        
        <h3>CheckPageStatus Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td >Credentials to be entered</td>
                <td>The credentials needed to check the status of the page.</td>
            </tr>
            
            <tr>
                <td class="required">Target URL</td>
                <td>URL of the page to be checked. </td>
            </tr>
            
            <tr>
                <td >Maximum Elapsed Time</td>
                <td>Defines the maximum time in seconds that the job will try to check into the server. Blank implies no wait time (URL only checked one time).</td>
            </tr>
            
            <tr>
                <td >Success Criteria</td>
                <td>Indicates the expected correct result to be obtained when running checking the server.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Checking the Status of a Page</h3>
                <p>To check the status of page at a specific URL, do the following steps:</p>
                <ol>
                    <li>Enter the following parameters:</li>
                    <img src="../../plugins/EC-WebSphere/images/CheckPageStatus/parametersToEnter.png" />
                    <li>Click <b>Run</b>. </li>
                </ol>
                <p>After the job runs, you can view the results, including the following job details,
                which show that the criteria was reached:</p>
                <img src="../../plugins/EC-WebSphere/images/CheckPageStatus/checkPageStatus5.png" />
                <p>In the <b>CheckPageStatus</b> step, click the Log
                icon to see the diagnostic info. The output is similar
                to the following diagnostic
                report.</p><img src="../../plugins/EC-WebSphere/images/CheckPageStatus/checkPageStatus6.png" />

        </p>
        
    </div>

    
    <div id="CheckServerStatus">
        <h2>CheckServerStatus</h2>
        
        
        <p>Check the status of the given server URL</p>
        
        
            <p>This procedure checks the status of the specified server URL.</p>

        
        <h3>CheckServerStatus Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td >Maximum Elapsed Time</td>
                <td>Defines the maximum time in seconds that the job will try to check into the server. Blank implies no wait time (URL only checked one time).</td>
            </tr>
            
            <tr>
                <td >Success Criteria</td>
                <td>Indicates the expected correct result to be obtained when running checking the server.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <img src="../../plugins/EC-WebSphere/images/CheckServerStatus/CSSparameters.png" />

        </p>
        
    </div>

    
    <div id="ConfigEJBContainer">
        <h2>ConfigEJBContainer</h2>
        
        
        <p>Configures EJB container using the wsadmin tool</p>
        
        
            <p>This procedure configures EJB container properites using a Jython script.</p>

        
        <h3>ConfigEJBContainer Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Absolute Path</td>
                <td>Path to wsadmin. If the location of wsadmin is in the PATH environment variable, then just the script name can be specified omitting its full path. E.g. '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td >Cell Name</td>
                <td>Name of cell to which EJB container belongs to. </td>
            </tr>
            
            <tr>
                <td >Node Name</td>
                <td>Name of node to which EJB container belongs to. </td>
            </tr>
            
            <tr>
                <td class="required">Server Name</td>
                <td>Name of application server to which EJB container belongs to.</td>
            </tr>
            
            <tr>
                <td >Passivation Directory</td>
                <td>Specifies the directory into which the container saves the persistent state of passivated stateful session beans. This directory must already exist. It is not automatically created.Default is ${USER_INSTALL_ROOT}/temp.</td>
            </tr>
            
            <tr>
                <td >Cache Size</td>
                <td>Number of buckets in the active instance list within the EJB container.Input value range - greater than 0. The container selects the next largest prime number equal to or greater than the specified value.Default is 2053</td>
            </tr>
            
            <tr>
                <td >Cleanup Interval</td>
                <td>Interval (in milliseconds)at which the container attempts to remove unused items from the cache.Default is 3000. Allowed range is 0 to 2147483647</td>
            </tr>
            
            <tr>
                <td >Inactive Pool Cleanup Interval</td>
                <td>Specifies the interval at which the container examines the pools of available bean instances to determine if some instances can be deleted to reduce memory usage.</td>
            </tr>
            
            <tr>
                <td >Enable stateful session bean fail over using memory-to-memory replication?</td>
                <td>Specifies that failover is enabled for all stateful session beans installed in this EJB container.Replication domains must already exist to failover feature to work.</td>
            </tr>
            
            <tr>
                <td >Replication domain</td>
                <td>Specifies the replication domain in which HTTP sessions are replicated.</td>
            </tr>
            
            <tr>
                <td >Replication Mode</td>
                <td>The mode specifies whether data is only sent (client), only received (server), or both. Select client if sessions need to be replicated. Select server if sessions need to be stored. Select both client and server if sessions need to be replicated and stored. The default is both.</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Configure EJB Container</h3>
                <p>To Configure EJB Container, do these steps:</p>
                <ol>
                    <li>Go to the ConfigEJBContainer procedure. </li>
                    <li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/ConfigEJBContainer/EC-WebSphereConfigEJBContainer2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details, which show that
                EJB container is configured successfully:</p>
                <img src="../../plugins/EC-WebSphere/images/ConfigEJBContainer/EC-WebSphereConfigEJBContainer3.png" />
                <p>In the <b>ConfigEJBContainer</b> step, click the Log icon
                to see the diagnostic information. The output is similar to
                the following diagnostic
                report.</p>
                <img src="../../plugins/EC-WebSphere/images/ConfigEJBContainer/EC-WebSphereConfigEJBContainer4.png" />

        </p>
        
    </div>

    
    <div id="DeployOSGiApp">
        <h2>DeployOSGiApp</h2>
        
        
        <p>Deploy OSGi application using the wsadmin tool</p>
        
        
            <p>This procedure deploys the OSGi application.It optionally configures external OSGi bundle library if the application to be deployed reference bundles that are stored in an external bundle repository. This procedure can also add the bundles to internal bundle repository, if required.</p>

        
        <h3>DeployOSGiApp Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" href="/commander/pages/@PLUGIN_NAME@/configurations" target="_blank">configuration page</a>.</td>
            </tr>
            
            <tr>
                <td class="required">Wsadmin Absolute Path</td>
                <td>Path to wsadmin. If the location of wsadmin is in the PATH environment variable, then just the script name can be specified omitting its full path. E.g. '/path/to/wsadmin.sh' or 'wsadmin.bat'.</td>
            </tr>
            
            <tr>
                <td >Want to add external bundle repository?</td>
                <td>If your OSGi applications reference bundles that are stored in an external bundle repository, you must configure a link (name and URL) to the repository so that the provisioner can retrieve the bundles when required. </td>
            </tr>
            
            <tr>
                <td >External Bundle Repository Name</td>
                <td>Name of the external bundle repository to configure. </td>
            </tr>
            
            <tr>
                <td >External Bundle Repository URL</td>
                <td>URL of the external bundle repository to configure. </td>
            </tr>
            
            <tr>
                <td >List of bundles to add to local repository</td>
                <td>Comma separated list of bundles to add to internal bundle repository.E.g. C:/installableApps/com.ibm.samples.websphere.osgi.logging.api.jar,C:/installableApps/com.ibm.samples.websphere.osgi.logging.impl.jar </td>
            </tr>
            
            <tr>
                <td class="required">EBA file Path</td>
                <td>Absolute path of the OSGi application to deploy. i.e: '/path/to/blog.eba' or 'c:/mydir/blog.eba'. </td>
            </tr>
            
            <tr>
                <td class="required">Application Name</td>
                <td>Name to be given to newly deployed OSGi application.</td>
            </tr>
            
            <tr>
                <td class="required">Target Deployment Unit</td>
                <td>Deployment Unit on which to deploy the OSGi application. For e.g cluster=cluster1 or node=node01,server=server1</td>
            </tr>
            
            </tbody>
        </table>
        
        <p>
            <h3>Deploy OSGi Application</h3>
                <p>To deploy an OSGi application, do these steps:</p>
                <ol>
                    <li>Go to the DeployOSGiApp procedure. </li>
                    <li> Enter the following parameters: </li><img src="../../plugins/EC-WebSphere/images/DeployOSGi/EC-WebSphereDeployOSGi2.png" />
                </ol>
                <p>After the job runs, you can view the results, including the following job details, which show that
                OSGi application is deployed successfully:</p>
                <img src="../../plugins/EC-WebSphere/images/DeployOSGi/EC-WebSphereDeployOSGi3.png" />
                <p>In the <b>DeployOSGi</b> step, click the Log icon
                to see the diagnostic information. The output is similar to
                the following diagnostic
                report.</p>
                <img src="../../plugins/EC-WebSphere/images/DeployOSGi/EC-WebSphereDeployOSGi4.png" />

        </p>
        
    </div>

    
    <div id="Discover">
        <h2>Discover</h2>
        
        
        <p>Discover WebSphere instance configuration on a resources or environment</p>
        
        
        <h3>Discover Parameters</h3>
        <table class="grid">
            <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
            </thead>
            <tbody>
            
            <tr>
                <td class="required">Configuration Name</td>
                <td>The plugin's configuration name.</td>
            </tr>
            
            <tr>
                <td class="required">Resource Names</td>
                <td>List of resources, on which discovery procedure should run. Enter multiple values on separate lines.</td>
            </tr>
            
            </tbody>
        </table>
        
    </div>

    

    

    

    <h1 id="releaseNotes">Release Notes</h1>
    
    <h3>@PLUGIN_KEY@ 2.6.0</h3>
    <ul>
        
        <li>Following new procedures have been added to support application server clusters management:
  <ul>
    <li><a href="#CreateFirstClusterMember">CreateFirstClusterMember</a></li>
    <li><a href="#CreateClusterMembers">CreateClusterMembers</a></li>
  </ul>
Following procedures have been refactored and improved:
  <ul>
    <li><a href="#StartCluster">StartCluster</a></li>
    <li><a href="#StopCluster">StopCluster</a></li>
    <li><a href="#CreateCluster">CreateCluster</a></li>
    <li><a href="#DeleteCluster">DeleteCluster</a></li>
    <li><a href="#ListClusterMembers">ListClusterMembers</a></li>
    <li><a href="#ListClusterMembers">RemoveClusterMembers</a></li>
  </ul>
  Error handling has been improved.
</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.5.0</h3>
    <ul>
        
        <li>Following New procedures have been added to support application server management:
  <ul>
  <li><a href="#CreateApplicationServer">CreateApplicationServer</a></li>
  <li><a href="#DeleteApplicationServer">DeleteApplicationServer</a></li>
  <li><a href="#CreateApplicationServerTemplate">CreateApplicationServerTemplate</a></li>
  <li><a href="#DeleteApplicationServerTemplate">DeleteApplicationServerTemplate</a></li>
  <li><a href="#ExportApplicationServer">ExportApplicationServer</a></li>
  <li><a href="#ImportApplicationServer">ImportApplicationServer</a></li>
  <li><a href="#StartApplicationServers">StartApplicationServers</a></li>
  <li><a href="#StopApplicationServers">StopApplicationServers</a></li>
  </ul>
  <li>Following New procedures have been added to support start and stop of Node and Deployment Manager:</li>
  <ul>
  <li><a href="#StartDeploymentManager">StartDeploymentManager</a></li>
  <li><a href="#StopDeploymentManager">StopDeploymentManager</a></li>
  <li><a href="#StartNode">StartNode</a></li>
  <li><a href="#StopNode">StopNode</a></li>
  </ul>
  <li>WSAdmin Absolute path has been changed from non-required to required in plugin configuration.</li>
</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.4.1</h3>
    <ul>
        
        <li>Configured the plugin to allow the ElectricFlow UI to create configs inline of procedure form.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.4.0</h3>
    <ul>
        
        <li>Following New procedures have been added to support the entire set of IBM JMS functionality:
  <ul>
    <li><a href="#CreateOrUpdateSIBJMSActivationSpec">CreateOrUpdateSIBJMSActivationSpec</a></li>
    <li><a href="#CreateOrUpdateWMQJMSActivationSpec">CreateOrUpdateWMQJMSActivationSpec</a></li>
    <li><a href="#CreateOrUpdateSIBJMSConnectionFactory">CreateOrUpdateSIBJMSConnectionFactory</a></li>
    <li><a href="#CreateOrUpdateWMQJMSConnectionFactory">CreateOrUpdateWMQJMSConnectionFactory</a></li>
    <li><a href="#DeleteJMSActivationSpec">DeleteJMSActivationSpec</a></li>
    <li><a href="#DeleteJMSConnectionFactory">DeleteJMSConnectionFactory</a></li>
    <li><a href="#DeleteJMSProvider">DeleteJMSProvider</a></li>
  </ul>
</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.3.1</h3>
    <ul>
        
        <li>Help links have been updated for DeleteJMSTopic and DeleteJMSQueue procedures.</li>
        
        <li>Configured the plugin to allow the ElectricFlow UI to render the plugin procedure parameters entirely using the configured form XMLs.</li>
        
        <li>Enabled the plugin for managing the plugin configurations in-line when defining an application process step or a pipeline stage task.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.3.0</h3>
    <ul>
        
        <li>Following New procedures have been added:
  <ul>
    <li><a href="#DeleteJMSQueue">DeleteJMSQueue</a></li>
    <li><a href="#DeleteJMSTopic">DeleteJMSTopic</a></li>
    <li><a href="#CreateOrUpdateJMSQueue">CreateOrUpdateJMSQueue</a></li>
    <li><a href="#CreateOrUpdateJMSTopic">CreateOrUpdateJMSTopic</a></li>
  </ul>
  </li>
  <li>
    Fixed non-ascii characters in plugin forms.
  </li>
  <li>
    Following procedures have been extended to support Websphere 9.0:
    <ul>
      <li><a href="#StartApp">StartApp</a></li>
      <li><a href="#StopApp">StopApp</a></li>
      <li><a href="#StopCluster">StopCluster</a></li>
    </ul>
  </li>
  <li>The Debug Level checkbox has been changed to a dropdown. The level will be defaulted to INFO if no value is chosen.</li>
  <li>
    WSAdmin Absolute Path has been added to configuration and made as an optional parameter for all the following procedures:
    <ul>
      <li><a href="#CreateJMSProvider">CreateJMSProvider</a></li>
      <li><a href="#RunCustomJob">RunCustomJob</a></li>
      <li><a href="#DeployEnterpriseApp">DeployEnterpriseApp</a></li>
      <li><a href="#CreateJDBCProvider">CreateJDBCProvider</a></li>
      <li><a href="#CheckApp">CheckApp</a></li>
    </ul>
  </li>
  <li>
    <a href="#DeployEnterpriseApp">DeployEnterpriseApp</a>
    <ul>
      <li>
        Fixed an issue when application was not started on all servers during deployment if server name and node name are the same.
      </li>
    </ul>
  </li>
  <li>
    <a href="#CreateJDBCProvider">CreateJDBCProvider</a>
    <ul>
      <li>
        Fixed an error with attached credentials when in some cases it was not possible to create new JDBC provider.
      </li>
    </ul>
  </li>
  <li>
    <a href="#CheckApp">CheckApp</a>
    <ul>
      <li>Procedure has been improved and now it could check for different application states.</li>
  </ul>
</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.2.4</h3>
    <ul>
        
        <li>Documentation has been improved.</li>
        
        <li>Cluster Scope field has been added to CreateJDBCProvider procedure.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.2.3</h3>
    <ul>
        
        <li>Added support of parallel execution for all plugin procedures.</li>
        
        <li>Added "Context root" parameter for Deploy Enterprise Application procedure.</li>
        
        <li>Bug fixes in CheckPageStatus procedure.</li>
        
        <li>Added warning instead of stack trace in the Stop/StartApp procedures if app was already stoped or started.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.2.2</h3>
    <ul>
        
        <li>Added new procedures - SyncNodes, CheckNodeStatus.</li>
        
        <li>Added following optional parameters to DeployEnterpriseApplication procedure:
  <ul>
    <li>"Synchronize active nodes": Sync active nodes after application deployment. Enabled by default.</li>
    <li>"Start application": Start the deployed application after deploying the application. Enabled by default.</li>
  </ul>
</li>
        
        <li>Changed default value for "Distribute application" from unchecked to checked. (Deploy Enterprise Application procedure).</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.2.1</h3>
    <ul>
        
        <li>Added new procedures - StartCluster, StopCluster, MapSharedLibrary, ModifyApplicationClassLoader.</li>
        
        <li>DeployEnterpriseApp procedure will now update the application if it is already deployed. This procedure was refactored.</li>
        
        <li>Added debugging in DeployEnterpriseApp procedure.</li>
        
        <li>Bug fixes in DeployEnterpriseApplication procedure on WASND 8.5.5 Windows platform.</li>
        
        <li>Bug fixes in UpdateApp procedure on WAS 8.5 and WASND 8.5.5 Windows platform.</li>
        
        <li>Added application name to step log when ModifyApplicationClassLoader procedure fails to find application.</li>
        
        <li>Added debug flag to plugin configurations.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.2.0</h3>
    <ul>
        
        <li>Added suport for discovering WebSphere configuraiton on ElectricFlow resource.</li>
        
        <li>Moved 'Connection Type' parameter for all plugin procedures to plugin's configuration.</li>
        
        <li>Added 'Cluster Name' and 'Server Name' optional parameter to 'Start Application' and 'Stop Application' procedures.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.1.2</h3>
    <ul>
        
        <li>Fixed issue with configurations being cached for IE.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.1.1</h3>
    <ul>
        
        <li>Added link to plugin Configuration Page in plugin step panels.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.1.0</h3>
    <ul>
        
        <li>Added support for WebSphere Network Deployment 8.5</li>
        
        <li>Added support to create a cluster, add application servers to it, deploy applications in the cluster, remove cluster members, and delete the cluster.</li>
        
        <li>Added support to deploy Java enterprise applications (EARs) and web archives (WARs).</li>
        
        <li>Added support to update deployed applications.</li>
        
        <li>Added support to deploy OSGi applications and to configure external and internal bundle repositories.</li>
        
        <li>Added support to configure session management component for deployed applications.</li>
        
        <li>Added support for setting the EJB container properties for improved memory consumption and stateful session bean failover.</li>
        
        <li>Added support for the JavaMail session.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.6</h3>
    <ul>
        
        <li>Fixed the DeployApp procedure to not include the password in the log file.</li>
        
        <li>Fixed the problem about attaching credentials in the CheckApp procedure.</li>
        
        <li>Fixed the problem where the wsadmin password appeared when you view job step log files and property information.</li>
        
        <li>Fixed instructions to create WebSphere plugin configurations.</li>
        
        <li>Fixed instructions to access plugins in ElectricFlow.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.5</h3>
    <ul>
        
        <li>Fix minor bugs.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.4</h3>
    <ul>
        
        <li>[Add four new procedures:CreateDatasources, DeleteDatasources, CreateJDBCProviders, and DeleteJDBCProviders.]</li>
        
        <li>Fix minor bugs.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.3</h3>
    <ul>
        
        <li>Change the procedure names in the step picker section.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.2</h3>
    <ul>
        
        <li>Make improvements to the help document.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.1</h3>
    <ul>
        
        <li>Features and Enhancements in EC-WebSphere 2.0.1.</li>
        
        <li>Use the new Parameter Form XML.</li>
        
        <li>Add a link directly to the new help document.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 2.0.0</h3>
    <ul>
        
        <li>Use the new help page format.</li>
        
        <li>Add new parameter panels for each procedure.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.3.0</h3>
    <ul>
        
        <li>Add the CheckPageStatus procedure.</li>
        
        <li>Remove the CURL dependency from the CheckServerStatus procedure.</li>
        
        <li>Fix minor bugs.</li>
        
        <li>The procedures now have only one step using ec-perl to execute the necessary commands.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.2.1</h3>
    <ul>
        
        <li>Fix a minor bug on the Configuration List page.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.2.0</h3>
    <ul>
        
        <li>Add the StartApp, StopApp, DeployApp, and UndeployApp procedures.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.1.1</h3>
    <ul>
        
        <li>Jython commands can now be entered manually in the RunCustomJob procedure.</li>
        
        <li>The absolute path of executable files now requires the path and filename with an extension.</li>
        
    </ul>
    
    <h3>@PLUGIN_KEY@ 1.1.0</h3>
    <ul>
        
        <li>RunCustomJob procedure has been added.</li>
        
    </ul>
    
</div>
</body>
</html>
