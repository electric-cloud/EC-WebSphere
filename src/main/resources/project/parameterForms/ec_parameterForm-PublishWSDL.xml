<editor>	<help>/commander/pages/@PLUGIN_NAME@/@PLUGIN_KEY@_help?s=Administration&amp;ss=Plugins#PublishWSDL</help>	<formElement>		<type>textarea</type>		<label>Commands:</label>		<property>commands</property>		<required>0</required>		<documentation>Commands to be entered to wsadmin. Use one command per line.</documentation>	</formElement>		<formElement>		<type>textarea</type>		<label>Java Parameters:</label>		<property>javaparams</property>		<required>0</required>		<documentation>Java options to be passed to wsadmin, separate them using semicolons (;).</documentation>	</formElement>		<formElement>		<type>textarea</type>		<label>Classpath:</label>		<property>classpath</property>		<required>0</required>		<documentation>Jars to be passed to the wsadmin classpath. It is a string containing paths (semicolon-separated) the required JARs to execute wsadmin in a particular job. i.e: 'c:/MyDir/Myjar.jar;d:/yourdir/yourdir.jar' or '/MyDir/Myjar.jar;/yourdir/yourdir.jar'.</documentation>	</formElement>		<formElement>		<type>entry</type>		<label>Wsadmin Absolute Path:</label>		<property>wsadminabspath</property>		<required>1</required>		<documentation>Absolute path of wsadmin, including filename and extension. If the path in which wsadmin is stored in the path environmental variable, the absolute path is ommited. i.e: '/path/to/wsadmin.sh' or 'wsadmin.bat'. </documentation>	</formElement>	<formElement>		<type>entry</type>		<label>Application Name:</label>		<property>appname</property>		<documentation>Name of the application of which to publish the WSDL file. i.e: 'webapp'. </documentation>		<required>1</required>	</formElement>	<formElement>		<type>entry</type>		<label>Location to publish WSDL file:</label>		<property>publish_location</property>		<documentation>Path on file system where to store the published WSDL files. i.e: 'webapp'. </documentation>		<required>1</required>	</formElement>	<formElement>		<type>entry</type>		<label>SOAP address prefixes:</label>		<property>soap_prefix</property>		<documentation>Give SOAP address prefix in format "{{module {{binding partial-url}}}}"  to customize the WSDL SOAP address for each module.. i.e: '{ {AddressBookJ2WB.war {{http http://localhost:9080}}} {StockQuote.jar {{http https://localhost:9443}}} }'. </documentation>		<required>0</required>	</formElement>		<formElement>		<type>entry</type>		<label>Configuration Name:</label>		<property>configname</property>		<documentation>Name of the configuration to be used. URL, port and credentials are gathered from the given configuration.</documentation>		<required>0</required>	</formElement>		<formElement>		<type>textarea</type>		<label>Additional Commands:</label>		<property>additionalcommands</property>		<documentation>	Additional commands to be entered for wsadmin.</documentation>		<required>0</required>	</formElement>		<formElement>		<type>select</type>		<label>Connection Type:</label>		<property>connectiontype</property>		<required>0</required>		<documentation>Specifies to type of connection to use to connect to the application server that you want to administer. The valid choices are SOAP, RMI, and NONE. Default is SOAP.</documentation>		<option><name>None</name><value>none</value></option>		<option><name>SOAP</name><value>soap</value></option>		<option><name>RMI</name><value>rmi</value></option>		<option><name>JSR160RMI</name><value>jsr160rmi</value></option>		<option><name>IPC</name><value>ipc</value></option>	</formElement></editor>