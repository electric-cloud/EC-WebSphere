<!--

     Copyright 2015 Electric Cloud, Inc.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.

-->
<editor>
    <help>/commander/pages/@PLUGIN_NAME@/@PLUGIN_KEY@_help?s=Administration&amp;ss=Plugins#StartNode</help>

    <formElement>
        <type>entry</type>
        <label>Configuration Name:</label>
        <!-- Improvements for CEV-18687 -->
        <configuration>1</configuration>
        <!-- End of improvements for CEV-18687 -->
        <property>configname</property>
        <propertyReference>/plugins/@PLUGIN_NAME@/project/websphere_cfgs</propertyReference>
        <documentation>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration. To view or create a new configuration, go to the Administration -> Plugins tab, and select 'Configure' action for @PLUGIN_KEY@ plugin.</documentation>
        <htmlDocumentation>Name of the configuration to be used. URL, port and credentials are retrieved from the given configuration.<br/><br/>A Configuration defines connection details and can be created by going to plugin <a style="text-decoration: none !important; border-bottom-style: dashed; border-bottom-width: thin; font-size: inherit; color: inherit; font-family: inherit; border-color: #d8d8d8; border-spacing: 2px;" target="_blank" href="/commander/pages/@PLUGIN_NAME@/configurations">configuration page</a>.</htmlDocumentation>
        <required>1</required>
    </formElement>
    <formElement>
        <label>StartNode Location:</label>
        <property>wasStartNodeLocation</property>
        <type>entry</type>
        <required>1</required>
        <documentation>Absolute Physical path in Filesystem to location of startNode script i.e., /path/to/startNode.sh or startNode.bat</documentation>
    </formElement>
    <formElement>
        <label>Node Profile:</label>
        <property>wasNodeProfile</property>
        <type>entry</type>
        <required>0</required>
        <documentation>
            Profile name of the Node which needs to be started.
            If this is not provided StartNode will start the Node which has the default profile.
        </documentation>
    </formElement>
    <formElement>
        <label>Log File Location:</label>
        <property>wasLogFileLocation</property>
        <type>entry</type>
        <required>0</required>
        <documentation>Absolute Physical path in Filesystem to location of startNode.sh logs i.e., /path/to/startServer.log</documentation>
    </formElement>
    <formElement>
        <label>Timeout:</label>
        <property>wasTimeout</property>
        <type>entry</type>
        <required>0</required>
        <documentation>Specifies the waiting time before node start times out and returns an error.</documentation>
    </formElement>
    <formElement>
        <label>Start all Application Servers?:</label>
        <property>wasStartServers</property>
        <type>checkbox</type>
        <required>0</required>
        <initiallyChecked>0</initiallyChecked>
        <checkedValue>1</checkedValue>
        <uncheckedValue>0</uncheckedValue>
        <documentation>Start all application servers within node after nodeagent is started.</documentation>
    </formElement>
    <formElement>
        <label>Node Name to start Servers:</label>
        <property>wasNodeName</property>
        <dependsOn>wasStartServers</dependsOn>
        <condition>${wasStartServers} == '1'</condition>
        <type>entry</type>
        <required>0</required>
        <documentation>Name of the node where application servers needs to be started.</documentation>
    </formElement>
    <formElement>
        <label>Additional Parameters:</label>
        <property>wasAdditionalParameters</property>
        <type>textarea</type>
        <required>0</required>
        <documentation>
            This parameter can be used to either override defaults or pass Custom Properties. For example: -quiet, -nowait, -help.
        </documentation>
    </formElement>
</editor>
